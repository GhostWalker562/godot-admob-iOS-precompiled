<?xml version="1.0" encoding="UTF-8" ?>
<class name="ProjectSettings" inherits="Object" version="3.3">
	<brief_description>
		Contains global variables accessible from everywhere.
	</brief_description>
	<description>
		Contains global variables accessible from everywhere. Use [method get_setting], [method set_setting] or [method has_setting] to access them. Variables stored in [code]project.godot[/code] are also loaded into ProjectSettings, making this object very useful for reading custom game configuration options.
		When naming a Project Settings property, use the full path to the setting including the category. For example, [code]"application/config/name"[/code] for the project name. Category and property names can be viewed in the Project Settings dialog.
		[b]Feature tags:[/b] Project settings can be overridden for specific platforms and configurations (debug, release, ...) using [url=https://docs.godotengine.org/en/latest/tutorials/export/feature_tags.html]feature tags[/url].
		[b]Overriding:[/b] Any project setting can be overridden by creating a file named [code]override.cfg[/code] in the project's root directory. This can also be used in exported projects by placing this file in the same directory as the project binary. Overriding will still take the base project settings' [url=https://docs.godotengine.org/en/latest/tutorials/export/feature_tags.html]feature tags[/url] in account. Therefore, make sure to [i]also[/i] override the setting with the desired feature tags if you want them to override base project settings on all platforms and configurations.
	</description>
	<tutorials>
		<link title="3D Physics Tests Demo">https://godotengine.org/asset-library/asset/675</link>
		<link title="3D Platformer Demo">https://godotengine.org/asset-library/asset/125</link>
		<link title="OS Test Demo">https://godotengine.org/asset-library/asset/677</link>
	</tutorials>
	<methods>
		<method name="add_property_info">
			<return type="void">
			</return>
			<argument index="0" name="hint" type="Dictionary">
			</argument>
			<description>
				Adds a custom property info to a property. The dictionary must contain:
				- [code]name[/code]: [String] (the property's name)
				- [code]type[/code]: [int] (see [enum Variant.Type])
				- optionally [code]hint[/code]: [int] (see [enum PropertyHint]) and [code]hint_string[/code]: [String]
				[b]Example:[/b]
				[codeblock]
				ProjectSettings.set("category/property_name", 0)

				var property_info = {
				    "name": "category/property_name",
				    "type": TYPE_INT,
				    "hint": PROPERTY_HINT_ENUM,
				    "hint_string": "one,two,three"
				}

				ProjectSettings.add_property_info(property_info)
				[/codeblock]
			</description>
		</method>
		<method name="clear">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Clears the whole configuration (not recommended, may break things).
			</description>
		</method>
		<method name="get_order" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Returns the order of a configuration value (influences when saved to the config file).
			</description>
		</method>
		<method name="get_setting" qualifiers="const">
			<return type="Variant">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Returns the value of a setting.
				[b]Example:[/b]
				[codeblock]
				print(ProjectSettings.get_setting("application/config/name"))
				[/codeblock]
			</description>
		</method>
		<method name="globalize_path" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="path" type="String">
			</argument>
			<description>
				Returns the absolute, native OS path corresponding to the localized [code]path[/code] (starting with [code]res://[/code] or [code]user://[/code]). The returned path will vary depending on the operating system and user preferences. See [url=https://docs.godotengine.org/en/3.3/tutorials/io/data_paths.html]File paths in Godot projects[/url] to see what those paths convert to. See also [method localize_path].
				[b]Note:[/b] [method globalize_path] with [code]res://[/code] will not work in an exported project. Instead, prepend the executable's base directory to the path when running from an exported project:
				[codeblock]
				var path = ""
				if OS.has_feature("editor"):
				    # Running from an editor binary.
				    # `path` will contain the absolute path to `hello.txt` located in the project root.
				    path = ProjectSettings.globalize_path("res://hello.txt")
				else:
				    # Running from an exported project.
				    # `path` will contain the absolute path to `hello.txt` next to the executable.
				    # This is *not* identical to using `ProjectSettings.globalize_path()` with a `res://` path,
				    # but is close enough in spirit.
				    path = OS.get_executable_path().get_base_dir().plus_file("hello.txt")
				[/codeblock]
			</description>
		</method>
		<method name="has_setting" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Returns [code]true[/code] if a configuration value is present.
			</description>
		</method>
		<method name="load_resource_pack">
			<return type="bool">
			</return>
			<argument index="0" name="pack" type="String">
			</argument>
			<argument index="1" name="replace_files" type="bool" default="true">
			</argument>
			<argument index="2" name="offset" type="int" default="0">
			</argument>
			<description>
				Loads the contents of the .pck or .zip file specified by [code]pack[/code] into the resource filesystem ([code]res://[/code]). Returns [code]true[/code] on success.
				[b]Note:[/b] If a file from [code]pack[/code] shares the same path as a file already in the resource filesystem, any attempts to load that file will use the file from [code]pack[/code] unless [code]replace_files[/code] is set to [code]false[/code].
				[b]Note:[/b] The optional [code]offset[/code] parameter can be used to specify the offset in bytes to the start of the resource pack. This is only supported for .pck files.
			</description>
		</method>
		<method name="localize_path" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="path" type="String">
			</argument>
			<description>
				Returns the localized path (starting with [code]res://[/code]) corresponding to the absolute, native OS [code]path[/code]. See also [method globalize_path].
			</description>
		</method>
		<method name="property_can_revert">
			<return type="bool">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Returns [code]true[/code] if the specified property exists and its initial value differs from the current value.
			</description>
		</method>
		<method name="property_get_revert">
			<return type="Variant">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<description>
				Returns the specified property's initial value. Returns [code]null[/code] if the property does not exist.
			</description>
		</method>
		<method name="save">
			<return type="int" enum="Error">
			</return>
			<description>
				Saves the configuration to the [code]project.godot[/code] file.
				[b]Note:[/b] This method is intended to be used by editor plugins, as modified [ProjectSettings] can't be loaded back in the running app. If you want to change project settings in exported projects, use [method save_custom] to save [code]override.cfg[/code] file.
			</description>
		</method>
		<method name="save_custom">
			<return type="int" enum="Error">
			</return>
			<argument index="0" name="file" type="String">
			</argument>
			<description>
				Saves the configuration to a custom file. The file extension must be [code].godot[/code] (to save in text-based [ConfigFile] format) or [code].binary[/code] (to save in binary format). You can also save [code]override.cfg[/code] file, which is also text, but can be used in exported projects unlike other formats.
			</description>
		</method>
		<method name="set_initial_value">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="value" type="Variant">
			</argument>
			<description>
				Sets the specified property's initial value. This is the value the property reverts to.
			</description>
		</method>
		<method name="set_order">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="position" type="int">
			</argument>
			<description>
				Sets the order of a configuration value (influences when saved to the config file).
			</description>
		</method>
		<method name="set_setting">
			<return type="void">
			</return>
			<argument index="0" name="name" type="String">
			</argument>
			<argument index="1" name="value" type="Variant">
			</argument>
			<description>
				Sets the value of a setting.
				[b]Example:[/b]
				[codeblock]
				ProjectSettings.set_setting("application/config/name", "Example")
				[/codeblock]
			</description>
		</method>
	</methods>
	<members>
		<member name="android/modules" type="String" setter="" getter="" default="&quot;&quot;">
			Comma-separated list of custom Android modules (which must have been built in the Android export templates) using their Java package path, e.g. [code]"org/godotengine/godot/MyCustomSingleton,com/example/foo/FrenchFriesFactory"[/code].
			[b]Note:[/b] Since Godot 3.2.2, the [code]org/godotengine/godot/GodotPaymentV3[/code] module was deprecated and replaced by the [code]GodotPayment[/code] plugin which should be enabled in the Android export preset under [code]Plugins[/code] section. The singleton to access in code was also renamed to [code]GodotPayment[/code].
		</member>
		<member name="application/boot_splash/bg_color" type="Color" setter="" getter="" default="Color( 0.14, 0.14, 0.14, 1 )">
			Background color for the boot splash.
		</member>
		<member name="application/boot_splash/fullsize" type="bool" setter="" getter="" default="true">
			If [code]true[/code], scale the boot splash image to the full window length when engine starts. If [code]false[/code], the engine will leave it at the default pixel size.
		</member>
		<member name="application/boot_splash/image" type="String" setter="" getter="" default="&quot;&quot;">
			Path to an image used as the boot splash.
		</member>
		<member name="application/boot_splash/use_filter" type="bool" setter="" getter="" default="true">
			If [code]true[/code], applies linear filtering when scaling the image (recommended for high resolution artwork). If [code]false[/code], uses nearest-neighbor interpolation (recommended for pixel art).
		</member>
		<member name="application/config/custom_user_dir_name" type="String" setter="" getter="" default="&quot;&quot;">
			This user directory is used for storing persistent data ([code]user://[/code] filesystem). If left empty, [code]user://[/code] resolves to a project-specific folder in Godot's own configuration folder (see [method OS.get_user_data_dir]). If a custom directory name is defined, this name will be used instead and appended to the system-specific user data directory (same parent folder as the Godot configuration folder documented in [method OS.get_user_data_dir]).
			The [member application/config/use_custom_user_dir] setting must be enabled for this to take effect.
		</member>
		<member name="application/config/description" type="String" setter="" getter="" default="&quot;&quot;">
			The project's description, displayed as a tooltip in the Project Manager when hovering the project.
		</member>
		<member name="application/config/icon" type="String" setter="" getter="" default="&quot;&quot;">
			Icon used for the project, set when project loads. Exporters will also use this icon when possible.
		</member>
		<member name="application/config/macos_native_icon" type="String" setter="" getter="" default="&quot;&quot;">
			Icon set in [code].icns[/code] format used on macOS to set the game's icon. This is done automatically on start by calling [method OS.set_native_icon].
		</member>
		<member name="application/config/name" type="String" setter="" getter="" default="&quot;&quot;">
			The project's name. It is used both by the Project Manager and by exporters. The project name can be translated by translating its value in localization files. The window title will be set to match the project name automatically on startup.
			[b]Note:[/b] Changing this value will also change the user data folder's path if [member application/config/use_custom_user_dir] is [code]false[/code]. After renaming the project, you will no longer be able to access existing data in [code]user://[/code] unless you rename the old folder to match the new project name. See [url=https://docs.godotengine.org/en/3.3/tutorials/io/data_paths.html]Data paths[/url] in the documentation for more information.
		</member>
		<member name="application/config/project_settings_override" type="String" setter="" getter="" default="&quot;&quot;">
			Specifies a file to override project settings. For example: [code]user://custom_settings.cfg[/code]. See "Overriding" in the [ProjectSettings] class description at the top for more information.
			[b]Note:[/b] Regardless of this setting's value, [code]res://override.cfg[/code] will still be read to override the project settings.
		</member>
		<member name="application/config/use_custom_user_dir" type="bool" setter="" getter="" default="false">
			If [code]true[/code], the project will save user data to its own user directory (see [member application/config/custom_user_dir_name]). This setting is only effective on desktop platforms. A name must be set in the [member application/config/custom_user_dir_name] setting for this to take effect. If [code]false[/code], the project will save user data to [code](OS user data directory)/Godot/app_userdata/(project name)[/code].
		</member>
		<member name="application/config/windows_native_icon" type="String" setter="" getter="" default="&quot;&quot;">
			Icon set in [code].ico[/code] format used on Windows to set the game's icon. This is done automatically on start by calling [method OS.set_native_icon].
		</member>
		<member name="application/run/disable_stderr" type="bool" setter="" getter="" default="false">
			If [code]true[/code], disables printing to standard error. If [code]true[/code], this also hides error and warning messages printed by [method @GDScript.push_error] and [method @GDScript.push_warning]. See also [member application/run/disable_stdout].
			Changes to this setting will only be applied upon restarting the application.
		</member>
		<member name="application/run/disable_stdout" type="bool" setter="" getter="" default="false">
			If [code]true[/code], disables printing to standard output. This is equivalent to starting the editor or project with the [code]--quiet[/code] command line argument. See also [member application/run/disable_stderr].
			Changes to this setting will only be applied upon restarting the application.
		</member>
		<member name="application/run/flush_stdout_on_print" type="bool" setter="" getter="" default="false">
			If [code]true[/code], flushes the standard output stream every time a line is printed. This affects both terminal logging and file logging.
			When running a project, this setting must be enabled if you want logs to be collected by service managers such as systemd/journalctl. This setting is disabled by default on release builds, since flushing on every printed line will negatively affect performance if lots of lines are printed in a rapid succession. Also, if this setting is enabled, logged files will still be written successfully if the application crashes or is otherwise killed by the user (without being closed "normally").
			[b]Note:[/b] Regardless of this setting, the standard error stream ([code]stderr[/code]) is always flushed when a line is printed to it.
			Changes to this setting will only be applied upon restarting the application.
		</member>
		<member name="application/run/flush_stdout_on_print.debug" type="bool" setter="" getter="" default="true">
			Debug build override for [member application/run/flush_stdout_on_print], as performance is less important during debugging.
			Changes to this setting will only be applied upon restarting the application.
		</member>
		<member name="application/run/frame_delay_msec" type="int" setter="" getter="" default="0">
			Forces a delay between frames in the main loop (in milliseconds). This may be useful if you plan to disable vertical synchronization.
		</member>
		<member name="application/run/low_processor_mode" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables low-processor usage mode. This setting only works on desktop platforms. The screen is not redrawn if nothing changes visually. This is meant for writing applications and editors, but is pretty useless (and can hurt performance) in most games.
		</member>
		<member name="application/run/low_processor_mode_sleep_usec" type="int" setter="" getter="" default="6900">
			Amount of sleeping between frames when the low-processor usage mode is enabled (in microseconds). Higher values will result in lower CPU usage.
		</member>
		<member name="application/run/main_scene" type="String" setter="" getter="" default="&quot;&quot;">
			Path to the main scene file that will be loaded when the project runs.
		</member>
		<member name="audio/channel_disable_threshold_db" type="float" setter="" getter="" default="-60.0">
			Audio buses will disable automatically when sound goes below a given dB threshold for a given time. This saves CPU as effects assigned to that bus will no longer do any processing.
		</member>
		<member name="audio/channel_disable_time" type="float" setter="" getter="" default="2.0">
			Audio buses will disable automatically when sound goes below a given dB threshold for a given time. This saves CPU as effects assigned to that bus will no longer do any processing.
		</member>
		<member name="audio/default_bus_layout" type="String" setter="" getter="" default="&quot;res://default_bus_layout.tres&quot;">
			Default [AudioBusLayout] resource file to use in the project, unless overridden by the scene.
		</member>
		<member name="audio/driver" type="String" setter="" getter="" default="&quot;PulseAudio&quot;">
			Specifies the audio driver to use. This setting is platform-dependent as each platform supports different audio drivers. If left empty, the default audio driver will be used.
		</member>
		<member name="audio/enable_audio_input" type="bool" setter="" getter="" default="false">
			If [code]true[/code], microphone input will be allowed. This requires appropriate permissions to be set when exporting to Android or iOS.
		</member>
		<member name="audio/mix_rate" type="int" setter="" getter="" default="44100">
			Mixing rate used for audio. In general, it's better to not touch this and leave it to the host operating system.
		</member>
		<member name="audio/output_latency" type="int" setter="" getter="" default="15">
			Output latency in milliseconds for audio. Lower values will result in lower audio latency at the cost of increased CPU usage. Low values may result in audible cracking on slower hardware.
		</member>
		<member name="audio/output_latency.web" type="int" setter="" getter="" default="50">
			Safer override for [member audio/output_latency] in the Web platform, to avoid audio issues especially on mobile devices.
		</member>
		<member name="audio/video_delay_compensation_ms" type="int" setter="" getter="" default="0">
			Setting to hardcode audio delay when playing video. Best to leave this untouched unless you know what you are doing.
		</member>
		<member name="compression/formats/gzip/compression_level" type="int" setter="" getter="" default="-1">
			The default compression level for gzip. Affects compressed scenes and resources. Higher levels result in smaller files at the cost of compression speed. Decompression speed is mostly unaffected by the compression level. [code]-1[/code] uses the default gzip compression level, which is identical to [code]6[/code] but could change in the future due to underlying zlib updates.
		</member>
		<member name="compression/formats/zlib/compression_level" type="int" setter="" getter="" default="-1">
			The default compression level for Zlib. Affects compressed scenes and resources. Higher levels result in smaller files at the cost of compression speed. Decompression speed is mostly unaffected by the compression level. [code]-1[/code] uses the default gzip compression level, which is identical to [code]6[/code] but could change in the future due to underlying zlib updates.
		</member>
		<member name="compression/formats/zstd/compression_level" type="int" setter="" getter="" default="3">
			The default compression level for Zstandard. Affects compressed scenes and resources. Higher levels result in smaller files at the cost of compression speed. Decompression speed is mostly unaffected by the compression level.
		</member>
		<member name="compression/formats/zstd/long_distance_matching" type="bool" setter="" getter="" default="false">
			Enables [url=https://github.com/facebook/zstd/releases/tag/v1.3.2]long-distance matching[/url] in Zstandard.
		</member>
		<member name="compression/formats/zstd/window_log_size" type="int" setter="" getter="" default="27">
			Largest size limit (in power of 2) allowed when compressing using long-distance matching with Zstandard. Higher values can result in better compression, but will require more memory when compressing and decompressing.
		</member>
		<member name="debug/gdscript/completion/autocomplete_setters_and_getters" type="bool" setter="" getter="" default="false">
			If [code]true[/code], displays getters and setters in autocompletion results in the script editor. This setting is meant to be used when porting old projects (Godot 2), as using member variables is the preferred style from Godot 3 onwards.
		</member>
		<member name="debug/gdscript/warnings/constant_used_as_function" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a constant is used as a function.
		</member>
		<member name="debug/gdscript/warnings/deprecated_keyword" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when deprecated keywords such as [code]slave[/code] are used.
		</member>
		<member name="debug/gdscript/warnings/enable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables specific GDScript warnings (see [code]debug/gdscript/warnings/*[/code] settings). If [code]false[/code], disables all GDScript warnings.
		</member>
		<member name="debug/gdscript/warnings/exclude_addons" type="bool" setter="" getter="" default="true">
			If [code]true[/code], scripts in the [code]res://addons[/code] folder will not generate warnings.
		</member>
		<member name="debug/gdscript/warnings/function_conflicts_constant" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a function is declared with the same name as a constant.
		</member>
		<member name="debug/gdscript/warnings/function_conflicts_variable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a function is declared with the same name as a variable. This will turn into an error in a future version when first-class functions become supported in GDScript.
		</member>
		<member name="debug/gdscript/warnings/function_may_yield" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a function assigned to a variable may yield and return a function state instead of a value.
		</member>
		<member name="debug/gdscript/warnings/function_used_as_property" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when using a function as if it was a property.
		</member>
		<member name="debug/gdscript/warnings/incompatible_ternary" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a ternary operator may emit values with incompatible types.
		</member>
		<member name="debug/gdscript/warnings/integer_division" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when dividing an integer by another integer (the decimal part will be discarded).
		</member>
		<member name="debug/gdscript/warnings/narrowing_conversion" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when passing a floating-point value to a function that expects an integer (it will be converted and lose precision).
		</member>
		<member name="debug/gdscript/warnings/property_used_as_function" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when using a property as if it was a function.
		</member>
		<member name="debug/gdscript/warnings/return_value_discarded" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when calling a function without using its return value (by assigning it to a variable or using it as a function argument). Such return values are sometimes used to denote possible errors using the [enum Error] enum.
		</member>
		<member name="debug/gdscript/warnings/shadowed_variable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when defining a local or subclass member variable that would shadow a variable at an upper level (such as a member variable).
		</member>
		<member name="debug/gdscript/warnings/standalone_expression" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when calling an expression that has no effect on the surrounding code, such as writing [code]2 + 2[/code] as a statement.
		</member>
		<member name="debug/gdscript/warnings/standalone_ternary" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when calling a ternary expression that has no effect on the surrounding code, such as writing [code]42 if active else 0[/code] as a statement.
		</member>
		<member name="debug/gdscript/warnings/treat_warnings_as_errors" type="bool" setter="" getter="" default="false">
			If [code]true[/code], all warnings will be reported as if they were errors.
		</member>
		<member name="debug/gdscript/warnings/unassigned_variable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when using a variable that wasn't previously assigned.
		</member>
		<member name="debug/gdscript/warnings/unassigned_variable_op_assign" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when assigning a variable using an assignment operator like [code]+=[/code] if the variable wasn't previously assigned.
		</member>
		<member name="debug/gdscript/warnings/unreachable_code" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when unreachable code is detected (such as after a [code]return[/code] statement that will always be executed).
		</member>
		<member name="debug/gdscript/warnings/unsafe_call_argument" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables warnings when using an expression whose type may not be compatible with the function parameter expected.
		</member>
		<member name="debug/gdscript/warnings/unsafe_cast" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables warnings when performing an unsafe cast.
		</member>
		<member name="debug/gdscript/warnings/unsafe_method_access" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables warnings when calling a method whose presence is not guaranteed at compile-time in the class.
		</member>
		<member name="debug/gdscript/warnings/unsafe_property_access" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables warnings when accessing a property whose presence is not guaranteed at compile-time in the class.
		</member>
		<member name="debug/gdscript/warnings/unused_argument" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a function parameter is unused.
		</member>
		<member name="debug/gdscript/warnings/unused_class_variable" type="bool" setter="" getter="" default="false">
			If [code]true[/code], enables warnings when a member variable is unused.
		</member>
		<member name="debug/gdscript/warnings/unused_signal" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a signal is unused.
		</member>
		<member name="debug/gdscript/warnings/unused_variable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a local variable is unused.
		</member>
		<member name="debug/gdscript/warnings/variable_conflicts_function" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when a variable is declared with the same name as a function. This will turn into an error in a future version when first-class functions become supported in GDScript.
		</member>
		<member name="debug/gdscript/warnings/void_assignment" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables warnings when assigning the result of a function that returns [code]void[/code] to a variable.
		</member>
		<member name="debug/settings/crash_handler/message" type="String" setter="" getter="" default="&quot;Please include this when reporting the bug on https://github.com/godotengine/godot/issues&quot;">
			Message to be displayed before the backtrace when the engine crashes.
		</member>
		<member name="debug/settings/fps/force_fps" type="int" setter="" getter="" default="0">
			Maximum number of frames per second allowed. The actual number of frames per second may still be below this value if the game is lagging.
			If [member display/window/vsync/use_vsync] is enabled, it takes precedence and the forced FPS number cannot exceed the monitor's refresh rate.
			This setting is therefore mostly relevant for lowering the maximum FPS below VSync, e.g. to perform non-real-time rendering of static frames, or test the project under lag conditions.
		</member>
		<member name="debug/settings/gdscript/max_call_stack" type="int" setter="" getter="" default="1024">
			Maximum call stack allowed for debugging GDScript.
		</member>
		<member name="debug/settings/profiler/max_functions" type="int" setter="" getter="" default="16384">
			Maximum amount of functions per frame allowed when profiling.
		</member>
		<member name="debug/settings/stdout/print_fps" type="bool" setter="" getter="" default="false">
			Print frames per second to standard output every second.
		</member>
		<member name="debug/settings/stdout/verbose_stdout" type="bool" setter="" getter="" default="false">
			Print more information to standard output when running. It displays information such as memory leaks, which scenes and resources are being loaded, etc.
		</member>
		<member name="debug/settings/visual_script/max_call_stack" type="int" setter="" getter="" default="1024">
			Maximum call stack in visual scripting, to avoid infinite recursion.
		</member>
		<member name="debug/shapes/collision/contact_color" type="Color" setter="" getter="" default="Color( 1, 0.2, 0.1, 0.8 )">
			Color of the contact points between collision shapes, visible when "Visible Collision Shapes" is enabled in the Debug menu.
		</member>
		<member name="debug/shapes/collision/draw_2d_outlines" type="bool" setter="" getter="" default="true">
			Sets whether 2D physics will display collision outlines in game when "Visible Collision Shapes" is enabled in the Debug menu.
		</member>
		<member name="debug/shapes/collision/max_contacts_displayed" type="int" setter="" getter="" default="10000">
			Maximum number of contact points between collision shapes to display when "Visible Collision Shapes" is enabled in the Debug menu.
		</member>
		<member name="debug/shapes/collision/shape_color" type="Color" setter="" getter="" default="Color( 0, 0.6, 0.7, 0.42 )">
			Color of the collision shapes, visible when "Visible Collision Shapes" is enabled in the Debug menu.
		</member>
		<member name="debug/shapes/navigation/disabled_geometry_color" type="Color" setter="" getter="" default="Color( 1, 0.7, 0.1, 0.4 )">
			Color of the disabled navigation geometry, visible when "Visible Navigation" is enabled in the Debug menu.
		</member>
		<member name="debug/shapes/navigation/geometry_color" type="Color" setter="" getter="" default="Color( 0.1, 1, 0.7, 0.4 )">
			Color of the navigation geometry, visible when "Visible Navigation" is enabled in the Debug menu.
		</member>
		<member name="display/mouse_cursor/custom_image" type="String" setter="" getter="" default="&quot;&quot;">
			Custom image for the mouse cursor (limited to 256×256).
		</member>
		<member name="display/mouse_cursor/custom_image_hotspot" type="Vector2" setter="" getter="" default="Vector2( 0, 0 )">
			Hotspot for the custom mouse cursor image.
		</member>
		<member name="display/mouse_cursor/tooltip_position_offset" type="Vector2" setter="" getter="" default="Vector2( 10, 10 )">
			Position offset for tooltips, relative to the mouse cursor's hotspot.
		</member>
		<member name="display/window/dpi/allow_hidpi" type="bool" setter="" getter="" default="false">
			If [code]true[/code], allows HiDPI display on Windows, macOS, and the HTML5 platform. This setting has no effect on desktop Linux, as DPI-awareness fallbacks are not supported there.
		</member>
		<member name="display/window/energy_saving/keep_screen_on" type="bool" setter="" getter="" default="true">
			If [code]true[/code], keeps the screen on (even in case of inactivity), so the screensaver does not take over. Works on desktop and mobile platforms.
		</member>
		<member name="display/window/handheld/orientation" type="String" setter="" getter="" default="&quot;landscape&quot;">
			The default screen orientation to use on mobile devices.
			[b]Note:[/b] When set to a portrait orientation, this project setting does not flip the project resolution's width and height automatically. Instead, you have to set [member display/window/size/width] and [member display/window/size/height] accordingly.
		</member>
		<member name="display/window/ios/hide_home_indicator" type="bool" setter="" getter="" default="true">
			If [code]true[/code], the home indicator is hidden automatically. This only affects iOS devices without a physical home button.
		</member>
		<member name="display/window/per_pixel_transparency/allowed" type="bool" setter="" getter="" default="false">
			If [code]true[/code], allows per-pixel transparency in a desktop window. This affects performance, so leave it on [code]false[/code] unless you need it.
		</member>
		<member name="display/window/per_pixel_transparency/enabled" type="bool" setter="" getter="" default="false">
			Sets the window background to transparent when it starts.
		</member>
		<member name="display/window/size/always_on_top" type="bool" setter="" getter="" default="false">
			Forces the main window to be always on top.
			[b]Note:[/b] This setting is ignored on iOS, Android, and HTML5.
		</member>
		<member name="display/window/size/borderless" type="bool" setter="" getter="" default="false">
			Forces the main window to be borderless.
			[b]Note:[/b] This setting is ignored on iOS, Android, and HTML5.
		</member>
		<member name="display/window/size/fullscreen" type="bool" setter="" getter="" default="false">
			Sets the main window to full screen when the project starts. Note that this is not [i]exclusive[/i] fullscreen. On Windows and Linux, a borderless window is used to emulate fullscreen. On macOS, a new desktop is used to display the running project.
			Regardless of the platform, enabling fullscreen will change the window size to match the monitor's size. Therefore, make sure your project supports [url=https://docs.godotengine.org/en/3.3/tutorials/rendering/multiple_resolutions.html]multiple resolutions[/url] when enabling fullscreen mode.
			[b]Note:[/b] This setting is ignored on iOS, Android, and HTML5.
		</member>
		<member name="display/window/size/height" type="int" setter="" getter="" default="600">
			Sets the game's main viewport height. On desktop platforms, this is the default window size. Stretch mode settings also use this as a reference when enabled.
		</member>
		<member name="display/window/size/resizable" type="bool" setter="" getter="" default="true">
			Allows the window to be resizable by default.
			[b]Note:[/b] This setting is ignored on iOS and Android.
		</member>
		<member name="display/window/size/test_height" type="int" setter="" getter="" default="0">
			If greater than zero, overrides the window height when running the game. Useful for testing stretch modes.
		</member>
		<member name="display/window/size/test_width" type="int" setter="" getter="" default="0">
			If greater than zero, overrides the window width when running the game. Useful for testing stretch modes.
		</member>
		<member name="display/window/size/width" type="int" setter="" getter="" default="1024">
			Sets the game's main viewport width. On desktop platforms, this is the default window size. Stretch mode settings also use this as a reference when enabled.
		</member>
		<member name="display/window/tablet_driver" type="String" setter="" getter="" default="&quot;&quot;">
			Specifies the tablet driver to use. If left empty, the default driver will be used.
		</member>
		<member name="display/window/vsync/use_vsync" type="bool" setter="" getter="" default="true">
			If [code]true[/code], enables vertical synchronization. This eliminates tearing that may appear in moving scenes, at the cost of higher input latency and stuttering at lower framerates. If [code]false[/code], vertical synchronization will be disabled, however, many platforms will enforce it regardless (such as mobile platforms and HTML5).
		</member>
		<member name="display/window/vsync/vsync_via_compositor" type="bool" setter="" getter="" default="false">
			If [code]Use Vsync[/code] is enabled and this setting is [code]true[/code], enables vertical synchronization via the operating system's window compositor when in windowed mode and the compositor is enabled. This will prevent stutter in certain situations. (Windows only.)
			[b]Note:[/b] This option is experimental and meant to alleviate stutter experienced by some users. However, some users have experienced a Vsync framerate halving (e.g. from 60 FPS to 30 FPS) when using it.
		</member>
		<member name="editor/script_templates_search_path" type="String" setter="" getter="" default="&quot;res://script_templates&quot;">
			Search path for project-specific script templates. Godot will search for script templates both in the editor-specific path and in this project-specific path.
		</member>
		<member name="editor/search_in_file_extensions" type="PoolStringArray" setter="" getter="" default="PoolStringArray( &quot;gd&quot;, &quot;gdshader&quot;, &quot;shader&quot; )">
			Text-based file extensions to include in the script editor's "Find in Files" feature. You can add e.g. [code]tscn[/code] if you wish to also parse your scene files, especially if you use built-in scripts which are serialized in the scene files.
		</member>
		<member name="gui/common/default_scroll_deadzone" type="int" setter="" getter="" default="0">
			Default value for [member ScrollContainer.scroll_deadzone], which will be used for all [ScrollContainer]s unless overridden.
		</member>
		<member name="gui/common/swap_ok_cancel" type="bool" setter="" getter="" default="false">
			If [code]true[/code], swaps OK and Cancel buttons in dialogs on Windows and UWP to follow interface conventions.
		</member>
		<member name="gui/common/text_edit_undo_stack_max_size" type="int" setter="" getter="" default="1024">
		</member>
		<member name="gui/theme/custom" type="String" setter="" getter="" default="&quot;&quot;">
			Path to a custom [Theme] resource file to use for the project ([code]theme[/code] or generic [code]tres[/code]/[code]res[/code] extension).
		</member>
		<member name="gui/theme/custom_font" type="String" setter="" getter="" default="&quot;&quot;">
			Path to a custom [Font] resource to use as default for all GUI elements of the project.
		</member>
		<member name="gui/theme/use_hidpi" type="bool" setter="" getter="" default="false">
			If [code]true[/code], makes sure the theme used works with HiDPI.
		</member>
		<member name="gui/timers/incremental_search_max_interval_msec" type="int" setter="" getter="" default="2000">
			Timer setting for incremental search in [Tree], [ItemList], etc. controls (in milliseconds).
		</member>
		<member name="gui/timers/text_edit_idle_detect_sec" type="float" setter="" getter="" default="3">
			Timer for detecting idle in [TextEdit] (in seconds).
		</member>
		<member name="gui/timers/tooltip_delay_sec" type="float" setter="" getter="" default="0.5">
			Default delay for tooltips (in seconds).
		</member>
		<member name="input/ui_accept" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to confirm a focused button, menu or list item, or validate input.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_cancel" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to discard a modal or pending input.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_down" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to move down in the UI.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_end" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to go to the end position of a [Control] (e.g. last item in an [ItemList] or a [Tree]), matching the behavior of [constant KEY_END] on typical desktop UI systems.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_focus_next" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to focus the next [Control] in the scene. The focus behavior can be configured via [member Control.focus_next].
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_focus_prev" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to focus the previous [Control] in the scene. The focus behavior can be configured via [member Control.focus_previous].
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_home" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to go to the start position of a [Control] (e.g. first item in an [ItemList] or a [Tree]), matching the behavior of [constant KEY_HOME] on typical desktop UI systems.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_left" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to move left in the UI.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_page_down" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to go down a page in a [Control] (e.g. in an [ItemList] or a [Tree]), matching the behavior of [constant KEY_PAGEDOWN] on typical desktop UI systems.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_page_up" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to go up a page in a [Control] (e.g. in an [ItemList] or a [Tree]), matching the behavior of [constant KEY_PAGEUP] on typical desktop UI systems.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_right" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to move right in the UI.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_select" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to select an item in a [Control] (e.g. in an [ItemList] or a [Tree]).
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input/ui_up" type="Dictionary" setter="" getter="">
			Default [InputEventAction] to move up in the UI.
			[b]Note:[/b] Default [code]ui_*[/code] actions cannot be removed as they are necessary for the internal logic of several [Control]s. The events assigned to the action can however be modified.
		</member>
		<member name="input_devices/pointing/emulate_mouse_from_touch" type="bool" setter="" getter="" default="true">
			If [code]true[/code], sends mouse input events when tapping or swiping on the touchscreen.
		</member>
		<member name="input_devices/pointing/emulate_touch_from_mouse" type="bool" setter="" getter="" default="false">
			If [code]true[/code], sends touch input events when clicking or dragging the mouse.
		</member>
		<member name="input_devices/pointing/ios/touch_delay" type="float" setter="" getter="" default="0.15">
			Default delay for touch events. This only affects iOS devices.
		</member>
		<member name="layer_names/2d_physics/layer_1" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 1.
		</member>
		<member name="layer_names/2d_physics/layer_10" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 10.
		</member>
		<member name="layer_names/2d_physics/layer_11" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 11.
		</member>
		<member name="layer_names/2d_physics/layer_12" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 12.
		</member>
		<member name="layer_names/2d_physics/layer_13" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 13.
		</member>
		<member name="layer_names/2d_physics/layer_14" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 14.
		</member>
		<member name="layer_names/2d_physics/layer_15" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 15.
		</member>
		<member name="layer_names/2d_physics/layer_16" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 16.
		</member>
		<member name="layer_names/2d_physics/layer_17" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 17.
		</member>
		<member name="layer_names/2d_physics/layer_18" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 18.
		</member>
		<member name="layer_names/2d_physics/layer_19" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 19.
		</member>
		<member name="layer_names/2d_physics/layer_2" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 2.
		</member>
		<member name="layer_names/2d_physics/layer_20" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 20.
		</member>
		<member name="layer_names/2d_physics/layer_3" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 3.
		</member>
		<member name="layer_names/2d_physics/layer_4" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 4.
		</member>
		<member name="layer_names/2d_physics/layer_5" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 5.
		</member>
		<member name="layer_names/2d_physics/layer_6" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 6.
		</member>
		<member name="layer_names/2d_physics/layer_7" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 7.
		</member>
		<member name="layer_names/2d_physics/layer_8" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 8.
		</member>
		<member name="layer_names/2d_physics/layer_9" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D physics layer 9.
		</member>
		<member name="layer_names/2d_render/layer_1" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 1.
		</member>
		<member name="layer_names/2d_render/layer_10" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 10.
		</member>
		<member name="layer_names/2d_render/layer_11" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 11.
		</member>
		<member name="layer_names/2d_render/layer_12" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 12.
		</member>
		<member name="layer_names/2d_render/layer_13" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 13.
		</member>
		<member name="layer_names/2d_render/layer_14" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 14.
		</member>
		<member name="layer_names/2d_render/layer_15" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 15.
		</member>
		<member name="layer_names/2d_render/layer_16" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 16.
		</member>
		<member name="layer_names/2d_render/layer_17" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 17.
		</member>
		<member name="layer_names/2d_render/layer_18" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 18.
		</member>
		<member name="layer_names/2d_render/layer_19" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 19.
		</member>
		<member name="layer_names/2d_render/layer_2" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 2.
		</member>
		<member name="layer_names/2d_render/layer_20" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 20.
		</member>
		<member name="layer_names/2d_render/layer_3" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 3.
		</member>
		<member name="layer_names/2d_render/layer_4" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 4.
		</member>
		<member name="layer_names/2d_render/layer_5" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 5.
		</member>
		<member name="layer_names/2d_render/layer_6" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 6.
		</member>
		<member name="layer_names/2d_render/layer_7" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 7.
		</member>
		<member name="layer_names/2d_render/layer_8" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 8.
		</member>
		<member name="layer_names/2d_render/layer_9" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 2D render layer 9.
		</member>
		<member name="layer_names/3d_physics/layer_1" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 1.
		</member>
		<member name="layer_names/3d_physics/layer_10" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 10.
		</member>
		<member name="layer_names/3d_physics/layer_11" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 11.
		</member>
		<member name="layer_names/3d_physics/layer_12" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 12.
		</member>
		<member name="layer_names/3d_physics/layer_13" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 13.
		</member>
		<member name="layer_names/3d_physics/layer_14" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 14.
		</member>
		<member name="layer_names/3d_physics/layer_15" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 15.
		</member>
		<member name="layer_names/3d_physics/layer_16" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 16.
		</member>
		<member name="layer_names/3d_physics/layer_17" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 17.
		</member>
		<member name="layer_names/3d_physics/layer_18" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 18.
		</member>
		<member name="layer_names/3d_physics/layer_19" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 19.
		</member>
		<member name="layer_names/3d_physics/layer_2" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 2.
		</member>
		<member name="layer_names/3d_physics/layer_20" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 20.
		</member>
		<member name="layer_names/3d_physics/layer_3" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 3.
		</member>
		<member name="layer_names/3d_physics/layer_4" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 4.
		</member>
		<member name="layer_names/3d_physics/layer_5" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 5.
		</member>
		<member name="layer_names/3d_physics/layer_6" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 6.
		</member>
		<member name="layer_names/3d_physics/layer_7" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 7.
		</member>
		<member name="layer_names/3d_physics/layer_8" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 8.
		</member>
		<member name="layer_names/3d_physics/layer_9" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D physics layer 9.
		</member>
		<member name="layer_names/3d_render/layer_1" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 1.
		</member>
		<member name="layer_names/3d_render/layer_10" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 10.
		</member>
		<member name="layer_names/3d_render/layer_11" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 11.
		</member>
		<member name="layer_names/3d_render/layer_12" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 12.
		</member>
		<member name="layer_names/3d_render/layer_13" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 13.
		</member>
		<member name="layer_names/3d_render/layer_14" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 14
		</member>
		<member name="layer_names/3d_render/layer_15" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 15.
		</member>
		<member name="layer_names/3d_render/layer_16" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 16.
		</member>
		<member name="layer_names/3d_render/layer_17" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 17.
		</member>
		<member name="layer_names/3d_render/layer_18" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 18.
		</member>
		<member name="layer_names/3d_render/layer_19" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 19.
		</member>
		<member name="layer_names/3d_render/layer_2" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 2.
		</member>
		<member name="layer_names/3d_render/layer_20" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 20.
		</member>
		<member name="layer_names/3d_render/layer_3" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 3.
		</member>
		<member name="layer_names/3d_render/layer_4" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 4.
		</member>
		<member name="layer_names/3d_render/layer_5" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 5.
		</member>
		<member name="layer_names/3d_render/layer_6" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 6.
		</member>
		<member name="layer_names/3d_render/layer_7" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 7.
		</member>
		<member name="layer_names/3d_render/layer_8" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 8.
		</member>
		<member name="layer_names/3d_render/layer_9" type="String" setter="" getter="" default="&quot;&quot;">
			Optional name for the 3D render layer 9.
		</member>
		<member name="locale/fallback" type="String" setter="" getter="" default="&quot;en&quot;">
			The locale to fall back to if a translation isn't available in a given language. If left empty, [code]en[/code] (English) will be used.
		</member>
		<member name="locale/test" type="String" setter="" getter="" default="&quot;&quot;">
			If non-empty, this locale will be used when running the project from the editor.
		</member>
		<member name="logging/file_logging/enable_file_logging" type="bool" setter="" getter="" default="false">
			If [code]true[/code], logs all output to files.
		</member>
		<member name="logging/file_logging/enable_file_logging.pc" type="bool" setter="" getter="" default="true">
			Desktop override for [member logging/file_logging/enable_file_logging], as log files are not readily accessible on mobile/Web platforms.
		</member>
		<member name="logging/file_logging/log_path" type="String" setter="" getter="" default="&quot;user://logs/godot.log&quot;">
			Path to logs within the project. Using an [code]user://[/code] path is recommended.
		</member>
		<member name="logging/file_logging/max_log_files" type="int" setter="" getter="" default="5">
			Specifies the maximum amount of log files allowed (used for rotation).
		</member>
		<member name="memory/limits/command_queue/multithreading_queue_size_kb" type="int" setter="" getter="" default="256">
		</member>
		<member name="memory/limits/message_queue/max_size_kb" type="int" setter="" getter="" default="4096">
			Godot uses a message queue to defer some function calls. If you run out of space on it (you will see an error), you can increase the size here.
		</member>
		<member name="memory/limits/multithreaded_server/rid_pool_prealloc" type="int" setter="" getter="" default="60">
			This is used by servers when used in multi-threading mode (servers and visual). RIDs are preallocated to avoid stalling the server requesting them on threads. If servers get stalled too often when loading resources in a thread, increase this number.
		</member>
		<member name="network/limits/debugger_stdout/max_chars_per_second" type="int" setter="" getter="" default="2048">
			Maximum amount of characters allowed to send as output from the debugger. Over this value, content is dropped. This helps not to stall the debugger connection.
		</member>
		<member name="network/limits/debugger_stdout/max_errors_per_second" type="int" setter="" getter="" default="100">
			Maximum number of errors allowed to be sent as output from the debugger. Over this value, content is dropped. This helps not to stall the debugger connection.
		</member>
		<member name="network/limits/debugger_stdout/max_messages_per_frame" type="int" setter="" getter="" default="10">
			Maximum amount of messages allowed to send as output from the debugger. Over this value, content is dropped. This helps not to stall the debugger connection.
		</member>
		<member name="network/limits/debugger_stdout/max_warnings_per_second" type="int" setter="" getter="" default="100">
			Maximum number of warnings allowed to be sent as output from the debugger. Over this value, content is dropped. This helps not to stall the debugger connection.
		</member>
		<member name="network/limits/packet_peer_stream/max_buffer_po2" type="int" setter="" getter="" default="16">
			Default size of packet peer stream for deserializing Godot data (in bytes, specified as a power of two). The default value [code]16[/code] is equal to 65,536 bytes. Over this size, data is dropped.
		</member>
		<member name="network/limits/tcp/connect_timeout_seconds" type="int" setter="" getter="" default="30">
			Timeout (in seconds) for connection attempts using TCP.
		</member>
		<member name="network/limits/webrtc/max_channel_in_buffer_kb" type="int" setter="" getter="" default="64">
			Maximum size (in kiB) for the [WebRTCDataChannel] input buffer.
		</member>
		<member name="network/limits/websocket_client/max_in_buffer_kb" type="int" setter="" getter="" default="64">
			Maximum size (in kiB) for the [WebSocketClient] input buffer.
		</member>
		<member name="network/limits/websocket_client/max_in_packets" type="int" setter="" getter="" default="1024">
			Maximum number of concurrent input packets for [WebSocketClient].
		</member>
		<member name="network/limits/websocket_client/max_out_buffer_kb" type="int" setter="" getter="" default="64">
			Maximum size (in kiB) for the [WebSocketClient] output buffer.
		</member>
		<member name="network/limits/websocket_client/max_out_packets" type="int" setter="" getter="" default="1024">
			Maximum number of concurrent output packets for [WebSocketClient].
		</member>
		<member name="network/limits/websocket_server/max_in_buffer_kb" type="int" setter="" getter="" default="64">
			Maximum size (in kiB) for the [WebSocketServer] input buffer.
		</member>
		<member name="network/limits/websocket_server/max_in_packets" type="int" setter="" getter="" default="1024">
			Maximum number of concurrent input packets for [WebSocketServer].
		</member>
		<member name="network/limits/websocket_server/max_out_buffer_kb" type="int" setter="" getter="" default="64">
			Maximum size (in kiB) for the [WebSocketServer] output buffer.
		</member>
		<member name="network/limits/websocket_server/max_out_packets" type="int" setter="" getter="" default="1024">
			Maximum number of concurrent output packets for [WebSocketServer].
		</member>
		<member name="network/remote_fs/page_read_ahead" type="int" setter="" getter="" default="4">
			Amount of read ahead used by remote filesystem. Higher values decrease the effects of latency at the cost of higher bandwidth usage.
		</member>
		<member name="network/remote_fs/page_size" type="int" setter="" getter="" default="65536">
			Page size used by remote filesystem (in bytes).
		</member>
		<member name="network/ssl/certificates" type="String" setter="" getter="" default="&quot;&quot;">
			The CA certificates bundle to use for SSL connections. If this is set to a non-empty value, this will [i]override[/i] Godot's default [url=https://github.com/godotengine/godot/blob/master/thirdparty/certs/ca-certificates.crt]Mozilla certificate bundle[/url]. If left empty, the default certificate bundle will be used.
			If in doubt, leave this setting empty.
		</member>
		<member name="node/name_casing" type="int" setter="" getter="" default="0">
			When creating node names automatically, set the type of casing in this project. This is mostly an editor setting.
		</member>
		<member name="node/name_num_separator" type="int" setter="" getter="" default="0">
			What to use to separate node name from number. This is mostly an editor setting.
		</member>
		<member name="physics/2d/bp_hash_table_size" type="int" setter="" getter="" default="4096">
			Size of the hash table used for the broad-phase 2D hash grid algorithm.
		</member>
		<member name="physics/2d/cell_size" type="int" setter="" getter="" default="128">
			Cell size used for the broad-phase 2D hash grid algorithm (in pixels).
		</member>
		<member name="physics/2d/default_angular_damp" type="float" setter="" getter="" default="1.0">
			The default angular damp in 2D.
			[b]Note:[/b] Good values are in the range [code]0[/code] to [code]1[/code]. At value [code]0[/code] objects will keep moving with the same velocity. Values greater than [code]1[/code] will aim to reduce the velocity to [code]0[/code] in less than a second e.g. a value of [code]2[/code] will aim to reduce the velocity to [code]0[/code] in half a second. A value equal to or greater than the physics frame rate ([member ProjectSettings.physics/common/physics_fps], [code]60[/code] by default) will bring the object to a stop in one iteration.
		</member>
		<member name="physics/2d/default_gravity" type="int" setter="" getter="" default="98">
			The default gravity strength in 2D (in pixels per second squared).
			[b]Note:[/b] This property is only read when the project starts. To change the default gravity at runtime, use the following code sample:
			[codeblock]
			# Set the default gravity strength to 98.
			Physics2DServer.area_set_param(get_viewport().find_world_2d().get_space(), Physics2DServer.AREA_PARAM_GRAVITY, 98)
			[/codeblock]
		</member>
		<member name="physics/2d/default_gravity_vector" type="Vector2" setter="" getter="" default="Vector2( 0, 1 )">
			The default gravity direction in 2D.
			[b]Note:[/b] This property is only read when the project starts. To change the default gravity vector at runtime, use the following code sample:
			[codeblock]
			# Set the default gravity direction to `Vector2(0, 1)`.
			Physics2DServer.area_set_param(get_viewport().find_world_2d().get_space(), Physics2DServer.AREA_PARAM_GRAVITY_VECTOR, Vector2(0, 1))
			[/codeblock]
		</member>
		<member name="physics/2d/default_linear_damp" type="float" setter="" getter="" default="0.1">
			The default linear damp in 2D.
			[b]Note:[/b] Good values are in the range [code]0[/code] to [code]1[/code]. At value [code]0[/code] objects will keep moving with the same velocity. Values greater than [code]1[/code] will aim to reduce the velocity to [code]0[/code] in less than a second e.g. a value of [code]2[/code] will aim to reduce the velocity to [code]0[/code] in half a second. A value equal to or greater than the physics frame rate ([member ProjectSettings.physics/common/physics_fps], [code]60[/code] by default) will bring the object to a stop in one iteration.
		</member>
		<member name="physics/2d/large_object_surface_threshold_in_cells" type="int" setter="" getter="" default="512">
			Threshold defining the surface size that constitutes a large object with regard to cells in the broad-phase 2D hash grid algorithm.
		</member>
		<member name="physics/2d/physics_engine" type="String" setter="" getter="" default="&quot;DEFAULT&quot;">
			Sets which physics engine to use for 2D physics.
			"DEFAULT" and "GodotPhysics" are the same, as there is currently no alternative 2D physics server implemented.
		</member>
		<member name="physics/2d/sleep_threshold_angular" type="float" setter="" getter="" default="0.139626">
			Threshold angular velocity under which a 2D physics body will be considered inactive. See [constant Physics2DServer.SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD].
		</member>
		<member name="physics/2d/sleep_threshold_linear" type="float" setter="" getter="" default="2.0">
			Threshold linear velocity under which a 2D physics body will be considered inactive. See [constant Physics2DServer.SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD].
		</member>
		<member name="physics/2d/thread_model" type="int" setter="" getter="" default="1">
			Sets whether physics is run on the main thread or a separate one. Running the server on a thread increases performance, but restricts API access to only physics process.
			[b]Warning:[/b] As of Godot 3.2, there are mixed reports about the use of a Multi-Threaded thread model for physics. Be sure to assess whether it does give you extra performance and no regressions when using it.
		</member>
		<member name="physics/2d/time_before_sleep" type="float" setter="" getter="" default="0.5">
			Time (in seconds) of inactivity before which a 2D physics body will put to sleep. See [constant Physics2DServer.SPACE_PARAM_BODY_TIME_TO_SLEEP].
		</member>
		<member name="physics/3d/active_soft_world" type="bool" setter="" getter="" default="true">
			Sets whether the 3D physics world will be created with support for [SoftBody] physics. Only applies to the Bullet physics engine.
		</member>
		<member name="physics/3d/default_angular_damp" type="float" setter="" getter="" default="0.1">
			The default angular damp in 3D.
			[b]Note:[/b] Good values are in the range [code]0[/code] to [code]1[/code]. At value [code]0[/code] objects will keep moving with the same velocity. Values greater than [code]1[/code] will aim to reduce the velocity to [code]0[/code] in less than a second e.g. a value of [code]2[/code] will aim to reduce the velocity to [code]0[/code] in half a second. A value equal to or greater than the physics frame rate ([member ProjectSettings.physics/common/physics_fps], [code]60[/code] by default) will bring the object to a stop in one iteration.
		</member>
		<member name="physics/3d/default_gravity" type="float" setter="" getter="" default="9.8">
			The default gravity strength in 3D (in meters per second squared).
			[b]Note:[/b] This property is only read when the project starts. To change the default gravity at runtime, use the following code sample:
			[codeblock]
			# Set the default gravity strength to 9.8.
			PhysicsServer.area_set_param(get_viewport().find_world().get_space(), PhysicsServer.AREA_PARAM_GRAVITY, 9.8)
			[/codeblock]
		</member>
		<member name="physics/3d/default_gravity_vector" type="Vector3" setter="" getter="" default="Vector3( 0, -1, 0 )">
			The default gravity direction in 3D.
			[b]Note:[/b] This property is only read when the project starts. To change the default gravity vector at runtime, use the following code sample:
			[codeblock]
			# Set the default gravity direction to `Vector3(0, -1, 0)`.
			PhysicsServer.area_set_param(get_viewport().find_world().get_space(), PhysicsServer.AREA_PARAM_GRAVITY_VECTOR, Vector3(0, -1, 0))
			[/codeblock]
		</member>
		<member name="physics/3d/default_linear_damp" type="float" setter="" getter="" default="0.1">
			The default linear damp in 3D.
			[b]Note:[/b] Good values are in the range [code]0[/code] to [code]1[/code]. At value [code]0[/code] objects will keep moving with the same velocity. Values greater than [code]1[/code] will aim to reduce the velocity to [code]0[/code] in less than a second e.g. a value of [code]2[/code] will aim to reduce the velocity to [code]0[/code] in half a second. A value equal to or greater than the physics frame rate ([member ProjectSettings.physics/common/physics_fps], [code]60[/code] by default) will bring the object to a stop in one iteration.
		</member>
		<member name="physics/3d/godot_physics/use_bvh" type="bool" setter="" getter="" default="true">
			Enables the use of bounding volume hierarchy instead of octree for physics spatial partitioning. This may give better performance.
		</member>
		<member name="physics/3d/physics_engine" type="String" setter="" getter="" default="&quot;DEFAULT&quot;">
			Sets which physics engine to use for 3D physics.
			"DEFAULT" is currently the [url=https://bulletphysics.org]Bullet[/url] physics engine. The "GodotPhysics" engine is still supported as an alternative.
		</member>
		<member name="physics/common/enable_object_picking" type="bool" setter="" getter="" default="true">
			Enables [member Viewport.physics_object_picking] on the root viewport.
		</member>
		<member name="physics/common/enable_pause_aware_picking" type="bool" setter="" getter="" default="false">
			If enabled, 2D and 3D physics picking behaves this way in relation to pause:
			- When pause is started, every collision object that is hovered or captured (3D only) is released from that condition, getting the relevant mouse-exit callback, unless its pause mode makes it immune to pause.
			- During pause, picking only considers collision objects immune to pause, sending input events and enter/exit callbacks to them as expected.
			If disabled, the legacy behavior is used, which consists in queuing the picking input events during pause (so nodes won't get them) and flushing that queue on resume, against the state of the 2D/3D world at that point.
		</member>
		<member name="physics/common/physics_fps" type="int" setter="" getter="" default="60">
			The number of fixed iterations per second. This controls how often physics simulation and [method Node._physics_process] methods are run.
			[b]Note:[/b] This property is only read when the project starts. To change the physics FPS at runtime, set [member Engine.iterations_per_second] instead.
		</member>
		<member name="physics/common/physics_jitter_fix" type="float" setter="" getter="" default="0.5">
			Controls how much physics ticks are synchronized with real time. For 0 or less, the ticks are synchronized. Such values are recommended for network games, where clock synchronization matters. Higher values cause higher deviation of in-game clock and real clock, but allows smoothing out framerate jitters. The default value of 0.5 should be fine for most; values above 2 could cause the game to react to dropped frames with a noticeable delay and are not recommended.
			[b]Note:[/b] For best results, when using a custom physics interpolation solution, the physics jitter fix should be disabled by setting [member physics/common/physics_jitter_fix] to [code]0[/code].
			[b]Note:[/b] This property is only read when the project starts. To change the physics FPS at runtime, set [member Engine.physics_jitter_fix] instead.
		</member>
		<member name="rendering/2d/opengl/batching_send_null" type="int" setter="" getter="" default="0">
			[b]Experimental[/b] Calls [code]glBufferData[/code] with NULL data prior to uploading batching data. This may not be necessary but can be used for safety.
			[b]Note:[/b] Use with care. You are advised to leave this as default for exports. A non-default setting that works better on your machine may adversely affect performance for end users.
		</member>
		<member name="rendering/2d/opengl/batching_stream" type="int" setter="" getter="" default="0">
			[b]Experimental[/b] If set to on, uses the [code]GL_STREAM_DRAW[/code] flag for batching buffer uploads. If off, uses the [code]GL_DYNAMIC_DRAW[/code] flag.
			[b]Note:[/b] Use with care. You are advised to leave this as default for exports. A non-default setting that works better on your machine may adversely affect performance for end users.
		</member>
		<member name="rendering/2d/opengl/legacy_orphan_buffers" type="int" setter="" getter="" default="0">
			[b]Experimental[/b] If set to on, this applies buffer orphaning - [code]glBufferData[/code] is called with NULL data and the full buffer size prior to uploading new data. This can be important to avoid stalling on some hardware.
			[b]Note:[/b] Use with care. You are advised to leave this as default for exports. A non-default setting that works better on your machine may adversely affect performance for end users.
		</member>
		<member name="rendering/2d/opengl/legacy_stream" type="int" setter="" getter="" default="0">
			[b]Experimental[/b] If set to on, uses the [code]GL_STREAM_DRAW[/code] flag for legacy buffer uploads. If off, uses the [code]GL_DYNAMIC_DRAW[/code] flag.
			[b]Note:[/b] Use with care. You are advised to leave this as default for exports. A non-default setting that works better on your machine may adversely affect performance for end users.
		</member>
		<member name="rendering/2d/options/ninepatch_mode" type="int" setter="" getter="" default="1">
			Choose between fixed mode where corner scalings are preserved matching the artwork, and scaling mode.
			Not available in GLES3 when [member rendering/batching/options/use_batching] is off.
		</member>
		<member name="rendering/2d/options/use_nvidia_rect_flicker_workaround" type="bool" setter="" getter="" default="false">
			Some NVIDIA GPU drivers have a bug which produces flickering issues for the [code]draw_rect[/code] method, especially as used in [TileMap]. Refer to [url=https://github.com/godotengine/godot/issues/9913]GitHub issue 9913[/url] for details.
			If [code]true[/code], this option enables a "safe" code path for such NVIDIA GPUs at the cost of performance. This option affects GLES2 and GLES3 rendering, but only on desktop platforms.
		</member>
		<member name="rendering/2d/options/use_software_skinning" type="bool" setter="" getter="" default="true">
			If [code]true[/code], performs 2D skinning on the CPU rather than the GPU. This provides greater compatibility with a wide range of hardware, and also may be faster in some circumstances.
			Currently only available when [member rendering/batching/options/use_batching] is active.
			[b]Note:[/b] Antialiased software skinned polys are not supported, and will be rendered without antialiasing.
			[b]Note:[/b] Custom shaders that use the [code]VERTEX[/code] built-in operate with [code]VERTEX[/code] position [i]after[/i] skinning, whereas with hardware skinning, [code]VERTEX[/code] is the position [i]before[/i] skinning.
		</member>
		<member name="rendering/2d/snapping/use_gpu_pixel_snap" type="bool" setter="" getter="" default="false">
			If [code]true[/code], forces snapping of vertices to pixels in 2D rendering. May help in some pixel art styles.
			This snapping is performed on the GPU in the vertex shader.
			Consider using the project setting [member rendering/batching/precision/uv_contract] to prevent artifacts.
		</member>
		<member name="rendering/batching/debug/diagnose_frame" type="bool" setter="" getter="" default="false">
			When batching is on, this regularly prints a frame diagnosis log. Note that this will degrade performance.
		</member>
		<member name="rendering/batching/debug/flash_batching" type="bool" setter="" getter="" default="false">
			[b]Experimental[/b] For regression testing against the old renderer. If this is switched on, and [code]use_batching[/code] is set, the renderer will swap alternately between using the old renderer, and the batched renderer, on each frame. This makes it easy to identify visual differences. Performance will be degraded.
		</member>
		<member name="rendering/batching/lights/max_join_items" type="int" setter="" getter="" default="32">
			Lights have the potential to prevent joining items, and break many of the performance benefits of batching. This setting enables some complex logic to allow joining items if their lighting is similar, and overlap tests pass. This can significantly improve performance in some games. Set to 0 to switch off. With large values the cost of overlap tests may lead to diminishing returns.
		</member>
		<member name="rendering/batching/lights/scissor_area_threshold" type="float" setter="" getter="" default="1.0">
			Sets the proportion of the total screen area (in pixels) that must be saved by a scissor operation in order to activate light scissoring. This can prevent parts of items being rendered outside the light area. Lower values scissor more aggressively. A value of 1 scissors none of the items, a value of 0 scissors every item. The power of 4 of the value is used, in order to emphasize the lower range, and multiplied by the total screen area in pixels to give the threshold. This can reduce fill rate requirements in scenes with a lot of lighting.
		</member>
		<member name="rendering/batching/options/single_rect_fallback" type="bool" setter="" getter="" default="false">
			Enabling this setting uses the legacy method to draw batches containing only one rect. The legacy method is faster (approx twice as fast), but can cause flicker on some systems. In order to directly compare performance with the non-batching renderer you can set this to true, but it is recommended to turn this off unless you can guarantee your target hardware will work with this method.
		</member>
		<member name="rendering/batching/options/use_batching" type="bool" setter="" getter="" default="true">
			Turns 2D batching on and off. Batching increases performance by reducing the amount of graphics API drawcalls.
		</member>
		<member name="rendering/batching/options/use_batching_in_editor" type="bool" setter="" getter="" default="true">
			Switches on 2D batching within the editor.
		</member>
		<member name="rendering/batching/parameters/batch_buffer_size" type="int" setter="" getter="" default="16384">
			Size of buffer reserved for batched vertices. Larger size enables larger batches, but there are diminishing returns for the memory used. This should only have a minor effect on performance.
		</member>
		<member name="rendering/batching/parameters/colored_vertex_format_threshold" type="float" setter="" getter="" default="0.25">
			Including color in the vertex format has a cost, however, not including color prevents batching across color changes. This threshold determines the ratio of [code]number of vertex color changes / total number of vertices[/code] above which vertices will be translated to colored format. A value of 0 will always use colored vertices, 1 will never use colored vertices.
		</member>
		<member name="rendering/batching/parameters/item_reordering_lookahead" type="int" setter="" getter="" default="4">
			In certain circumstances, the batcher can reorder items in order to better join them. This may result in better performance. An overlap test is needed however for each item lookahead, so there is a trade off, with diminishing returns. If you are getting no benefit, setting this to 0 will switch it off.
		</member>
		<member name="rendering/batching/parameters/max_join_item_commands" type="int" setter="" getter="" default="16">
			Sets the number of commands to lookahead to determine whether to batch render items. A value of 1 can join items consisting of single commands, 0 turns off joining. Higher values are in theory more likely to join, however this has diminishing returns and has a runtime cost so a small value is recommended.
		</member>
		<member name="rendering/batching/precision/uv_contract" type="bool" setter="" getter="" default="false">
			On some platforms (especially mobile), precision issues in shaders can lead to reading 1 texel outside of bounds, particularly where rects are scaled. This can particularly lead to border artifacts around tiles in tilemaps.
			This adjustment corrects for this by making a small contraction to the UV coordinates used. Note that this can result in a slight squashing of border texels.
		</member>
		<member name="rendering/batching/precision/uv_contract_amount" type="int" setter="" getter="" default="100">
			The amount of UV contraction. This figure is divided by 1000000, and is a proportion of the total texture dimensions, where the width and height are both ranged from 0.0 to 1.0.
			Use the default unless correcting for a problem on particular hardware.
		</member>
		<member name="rendering/cpu_lightmapper/quality/high_quality_ray_count" type="int" setter="" getter="" default="512">
			Amount of light samples taken when using [constant BakedLightmap.BAKE_QUALITY_HIGH].
		</member>
		<member name="rendering/cpu_lightmapper/quality/low_quality_ray_count" type="int" setter="" getter="" default="64">
			Amount of light samples taken when using [constant BakedLightmap.BAKE_QUALITY_LOW].
		</member>
		<member name="rendering/cpu_lightmapper/quality/medium_quality_ray_count" type="int" setter="" getter="" default="256">
			Amount of light samples taken when using [constant BakedLightmap.BAKE_QUALITY_MEDIUM].
		</member>
		<member name="rendering/cpu_lightmapper/quality/ultra_quality_ray_count" type="int" setter="" getter="" default="1024">
			Amount of light samples taken when using [constant BakedLightmap.BAKE_QUALITY_ULTRA].
		</member>
		<member name="rendering/environment/default_clear_color" type="Color" setter="" getter="" default="Color( 0.3, 0.3, 0.3, 1 )">
			Default background clear color. Overridable per [Viewport] using its [Environment]. See [member Environment.background_mode] and [member Environment.background_color] in particular. To change this default color programmatically, use [method VisualServer.set_default_clear_color].
		</member>
		<member name="rendering/environment/default_environment" type="String" setter="" getter="" default="&quot;&quot;">
			[Environment] that will be used as a fallback environment in case a scene does not specify its own environment. The default environment is loaded in at scene load time regardless of whether you have set an environment or not. If you do not rely on the fallback environment, it is best to delete [code]default_env.tres[/code], or to specify a different default environment here.
		</member>
		<member name="rendering/gles2/compatibility/disable_half_float" type="bool" setter="" getter="" default="false">
			The use of half-float vertex compression may be producing rendering errors on some platforms (especially iOS). These have been seen particularly in particles. Disabling half-float may resolve these problems.
		</member>
		<member name="rendering/gles2/compatibility/enable_high_float.Android" type="bool" setter="" getter="" default="false">
			If [code]true[/code] and available on the target device, enables high floating point precision for all shader computations in GLES2.
			[b]Warning:[/b] High floating point precision can be extremely slow on older devices and is often not available at all. Use with caution.
		</member>
		<member name="rendering/limits/buffers/blend_shape_max_buffer_size_kb" type="int" setter="" getter="" default="4096">
			Max buffer size for blend shapes. Any blend shape bigger than this will not work.
		</member>
		<member name="rendering/limits/buffers/canvas_polygon_buffer_size_kb" type="int" setter="" getter="" default="128">
			Max buffer size for drawing polygons. Any polygon bigger than this will not work.
		</member>
		<member name="rendering/limits/buffers/canvas_polygon_index_buffer_size_kb" type="int" setter="" getter="" default="128">
			Max index buffer size for drawing polygons. Any polygon bigger than this will not work.
		</member>
		<member name="rendering/limits/buffers/immediate_buffer_size_kb" type="int" setter="" getter="" default="2048">
			Max buffer size for drawing immediate objects (ImmediateGeometry nodes). Nodes using more than this size will not work.
		</member>
		<member name="rendering/limits/rendering/max_lights_per_object" type="int" setter="" getter="" default="32">
			Max number of lights renderable per object. This is further limited by hardware support. Most devices only support 409 lights, while many devices (especially mobile) only support 102. Setting this low will slightly reduce memory usage and may decrease shader compile times.
		</member>
		<member name="rendering/limits/rendering/max_renderable_elements" type="int" setter="" getter="" default="65536">
			Max amount of elements renderable in a frame. If more elements than this are visible per frame, they will not be drawn. Keep in mind elements refer to mesh surfaces and not meshes themselves. Setting this low will slightly reduce memory usage and may decrease shader compile times, particularly on web. For most uses, the default value is suitable, but consider lowering as much as possible on web export.
		</member>
		<member name="rendering/limits/rendering/max_renderable_lights" type="int" setter="" getter="" default="4096">
			Max number of lights renderable in a frame. If more lights than this number are used, they will be ignored. Setting this low will slightly reduce memory usage and may decrease shader compile times, particularly on web. For most uses, the default value is suitable, but consider lowering as much as possible on web export.
		</member>
		<member name="rendering/limits/rendering/max_renderable_reflections" type="int" setter="" getter="" default="1024">
			Max number of reflection probes renderable in a frame. If more reflection probes than this number are used, they will be ignored. Setting this low will slightly reduce memory usage and may decrease shader compile times, particularly on web. For most uses, the default value is suitable, but consider lowering as much as possible on web export.
		</member>
		<member name="rendering/limits/time/time_rollover_secs" type="float" setter="" getter="" default="3600">
			Shaders have a time variable that constantly increases. At some point, it needs to be rolled back to zero to avoid precision errors on shader animations. This setting specifies when (in seconds).
		</member>
		<member name="rendering/quality/depth/hdr" type="bool" setter="" getter="" default="true">
			If [code]true[/code], allocates the main framebuffer with high dynamic range. High dynamic range allows the use of [Color] values greater than 1.
			[b]Note:[/b] Only available on the GLES3 backend.
		</member>
		<member name="rendering/quality/depth/hdr.mobile" type="bool" setter="" getter="" default="false">
			Lower-end override for [member rendering/quality/depth/hdr] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/depth_prepass/disable_for_vendors" type="String" setter="" getter="" default="&quot;PowerVR,Mali,Adreno,Apple&quot;">
			Disables depth pre-pass for some GPU vendors (usually mobile), as their architecture already does this.
		</member>
		<member name="rendering/quality/depth_prepass/enable" type="bool" setter="" getter="" default="true">
			If [code]true[/code], performs a previous depth pass before rendering materials. This increases performance in scenes with high overdraw, when complex materials and lighting are used.
		</member>
		<member name="rendering/quality/directional_shadow/size" type="int" setter="" getter="" default="4096">
			The directional shadow's size in pixels. Higher values will result in sharper shadows, at the cost of performance. The value will be rounded up to the nearest power of 2.
		</member>
		<member name="rendering/quality/directional_shadow/size.mobile" type="int" setter="" getter="" default="2048">
			Lower-end override for [member rendering/quality/directional_shadow/size] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/driver/driver_name" type="String" setter="" getter="" default="&quot;GLES3&quot;">
			The video driver to use ("GLES2" or "GLES3").
			[b]Note:[/b] The backend in use can be overridden at runtime via the [code]--video-driver[/code] command line argument, or by the [member rendering/quality/driver/fallback_to_gles2] option if the target system does not support GLES3 and falls back to GLES2. In such cases, this property is not updated, so use [method OS.get_current_video_driver] to query it at run-time.
		</member>
		<member name="rendering/quality/driver/fallback_to_gles2" type="bool" setter="" getter="" default="false">
			If [code]true[/code], allows falling back to the GLES2 driver if the GLES3 driver is not supported.
			[b]Note:[/b] The two video drivers are not drop-in replacements for each other, so a game designed for GLES3 might not work properly when falling back to GLES2. In particular, some features of the GLES3 backend are not available in GLES2. Enabling this setting also means that both ETC and ETC2 VRAM-compressed textures will be exported on Android and iOS, increasing the data pack's size.
		</member>
		<member name="rendering/quality/filters/anisotropic_filter_level" type="int" setter="" getter="" default="4">
			Maximum anisotropic filter level used for textures with anisotropy enabled. Higher values will result in sharper textures when viewed from oblique angles, at the cost of performance. Only power-of-two values are valid (2, 4, 8, 16).
		</member>
		<member name="rendering/quality/filters/msaa" type="int" setter="" getter="" default="0">
			Sets the number of MSAA samples to use. MSAA is used to reduce aliasing around the edges of polygons. A higher MSAA value results in smoother edges but can be significantly slower on some hardware.
			[b]Note:[/b] MSAA is not available on HTML5 export using the GLES2 backend.
		</member>
		<member name="rendering/quality/filters/use_debanding" type="bool" setter="" getter="" default="false">
			If [code]true[/code], uses a fast post-processing filter to make banding significantly less visible. In some cases, debanding may introduce a slightly noticeable dithering pattern. It's recommended to enable debanding only when actually needed since the dithering pattern will make lossless-compressed screenshots larger.
			[b]Note:[/b] Only available on the GLES3 backend. [member rendering/quality/depth/hdr] must also be [code]true[/code] for debanding to be effective.
			[b]Note:[/b] There are known issues with debanding breaking rendering on mobile platforms. Due to this, it is recommended to leave this option disabled when targeting mobile platforms.
		</member>
		<member name="rendering/quality/filters/use_fxaa" type="bool" setter="" getter="" default="false">
			Enables FXAA in the root Viewport. FXAA is a popular screen-space antialiasing method, which is fast but will make the image look blurry, especially at lower resolutions. It can still work relatively well at large resolutions such as 1440p and 4K.
		</member>
		<member name="rendering/quality/filters/use_nearest_mipmap_filter" type="bool" setter="" getter="" default="false">
			If [code]true[/code], uses nearest-neighbor mipmap filtering when using mipmaps (also called "bilinear filtering"), which will result in visible seams appearing between mipmap stages. This may increase performance in mobile as less memory bandwidth is used. If [code]false[/code], linear mipmap filtering (also called "trilinear filtering") is used.
		</member>
		<member name="rendering/quality/intended_usage/framebuffer_allocation" type="int" setter="" getter="" default="2">
			Strategy used for framebuffer allocation. The simpler it is, the less resources it uses (but the less features it supports). If set to "2D Without Sampling" or "3D Without Effects", sample buffers will not be allocated. This means [code]SCREEN_TEXTURE[/code] and [code]DEPTH_TEXTURE[/code] will not be available in shaders and post-processing effects will not be available in the [Environment].
		</member>
		<member name="rendering/quality/intended_usage/framebuffer_allocation.mobile" type="int" setter="" getter="" default="3">
			Lower-end override for [member rendering/quality/intended_usage/framebuffer_allocation] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/lightmapping/use_bicubic_sampling" type="bool" setter="" getter="" default="true">
			Enable usage of bicubic sampling in baked lightmaps. This results in smoother looking lighting at the expense of more bandwidth usage. On GLES2, changes to this setting will only be applied upon restarting the application.
		</member>
		<member name="rendering/quality/lightmapping/use_bicubic_sampling.mobile" type="bool" setter="" getter="" default="false">
			Lower-end override for [member rendering/quality/lightmapping/use_bicubic_sampling] on mobile devices, in order to reduce bandwidth usage.
		</member>
		<member name="rendering/quality/reflections/atlas_size" type="int" setter="" getter="" default="2048">
			Size of the atlas used by reflection probes. A larger size can result in higher visual quality, while a smaller size will be faster and take up less memory.
		</member>
		<member name="rendering/quality/reflections/atlas_subdiv" type="int" setter="" getter="" default="8">
			Number of subdivisions to use for the reflection atlas. A higher number lowers the quality of each atlas, but allows you to use more.
		</member>
		<member name="rendering/quality/reflections/high_quality_ggx" type="bool" setter="" getter="" default="true">
			If [code]true[/code], uses a high amount of samples to create blurred variants of reflection probes and panorama backgrounds (sky). Those blurred variants are used by rough materials.
		</member>
		<member name="rendering/quality/reflections/high_quality_ggx.mobile" type="bool" setter="" getter="" default="false">
			Lower-end override for [member rendering/quality/reflections/high_quality_ggx] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/reflections/irradiance_max_size" type="int" setter="" getter="" default="128">
			Limits the size of the irradiance map which is normally determined by [member Sky.radiance_size]. A higher size results in a higher quality irradiance map similarly to [member rendering/quality/reflections/high_quality_ggx]. Use a higher value when using high-frequency HDRI maps, otherwise keep this as low as possible.
			[b]Note:[/b] Low and mid range hardware do not support complex irradiance maps well and may crash if this is set too high.
		</member>
		<member name="rendering/quality/reflections/texture_array_reflections" type="bool" setter="" getter="" default="true">
			If [code]true[/code], uses texture arrays instead of mipmaps for reflection probes and panorama backgrounds (sky). This reduces jitter noise on reflections, but costs more performance and memory.
		</member>
		<member name="rendering/quality/reflections/texture_array_reflections.mobile" type="bool" setter="" getter="" default="false">
			Lower-end override for [member rendering/quality/reflections/texture_array_reflections] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/shading/force_blinn_over_ggx" type="bool" setter="" getter="" default="false">
			If [code]true[/code], uses faster but lower-quality Blinn model to generate blurred reflections instead of the GGX model.
		</member>
		<member name="rendering/quality/shading/force_blinn_over_ggx.mobile" type="bool" setter="" getter="" default="true">
			Lower-end override for [member rendering/quality/shading/force_blinn_over_ggx] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/shading/force_lambert_over_burley" type="bool" setter="" getter="" default="false">
			If [code]true[/code], uses faster but lower-quality Lambert material lighting model instead of Burley.
		</member>
		<member name="rendering/quality/shading/force_lambert_over_burley.mobile" type="bool" setter="" getter="" default="true">
			Lower-end override for [member rendering/quality/shading/force_lambert_over_burley] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/shading/force_vertex_shading" type="bool" setter="" getter="" default="false">
			If [code]true[/code], forces vertex shading for all rendering. This can increase performance a lot, but also reduces quality immensely. Can be used to optimize performance on low-end mobile devices.
		</member>
		<member name="rendering/quality/shading/force_vertex_shading.mobile" type="bool" setter="" getter="" default="true">
			Lower-end override for [member rendering/quality/shading/force_vertex_shading] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/shadow_atlas/cubemap_size" type="int" setter="" getter="" default="512">
			Size for cubemap into which the shadow is rendered before being copied into the shadow atlas. A higher number can result in higher resolution shadows when used with a higher [member rendering/quality/shadow_atlas/size]. Setting higher than a quarter of the [member rendering/quality/shadow_atlas/size] will not result in a perceptible increase in visual quality.
		</member>
		<member name="rendering/quality/shadow_atlas/quadrant_0_subdiv" type="int" setter="" getter="" default="1">
			Subdivision quadrant size for shadow mapping. See shadow mapping documentation.
		</member>
		<member name="rendering/quality/shadow_atlas/quadrant_1_subdiv" type="int" setter="" getter="" default="2">
			Subdivision quadrant size for shadow mapping. See shadow mapping documentation.
		</member>
		<member name="rendering/quality/shadow_atlas/quadrant_2_subdiv" type="int" setter="" getter="" default="3">
			Subdivision quadrant size for shadow mapping. See shadow mapping documentation.
		</member>
		<member name="rendering/quality/shadow_atlas/quadrant_3_subdiv" type="int" setter="" getter="" default="4">
			Subdivision quadrant size for shadow mapping. See shadow mapping documentation.
		</member>
		<member name="rendering/quality/shadow_atlas/size" type="int" setter="" getter="" default="4096">
			Size for shadow atlas (used for OmniLights and SpotLights). See documentation.
		</member>
		<member name="rendering/quality/shadow_atlas/size.mobile" type="int" setter="" getter="" default="2048">
			Lower-end override for [member rendering/quality/shadow_atlas/size] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/shadows/filter_mode" type="int" setter="" getter="" default="1">
			Shadow filter mode. Higher-quality settings result in smoother shadows that flicker less when moving. "Disabled" is the fastest option, but also has the lowest quality. "PCF5" is smoother but is also slower. "PCF13" is the smoothest option, but is also the slowest.
			[b]Note:[/b] When using the GLES2 backend, the "PCF13" option actually uses 16 samples to emulate linear filtering in the shader. This results in a shadow appearance similar to the one produced by the GLES3 backend.
		</member>
		<member name="rendering/quality/shadows/filter_mode.mobile" type="int" setter="" getter="" default="0">
			Lower-end override for [member rendering/quality/shadows/filter_mode] on mobile devices, due to performance concerns or driver support.
		</member>
		<member name="rendering/quality/skinning/force_software_skinning" type="bool" setter="" getter="" default="false">
			Forces [MeshInstance] to always perform skinning on the CPU (applies to both GLES2 and GLES3).
			See also [member rendering/quality/skinning/software_skinning_fallback].
		</member>
		<member name="rendering/quality/skinning/software_skinning_fallback" type="bool" setter="" getter="" default="true">
			Allows [MeshInstance] to perform skinning on the CPU when the hardware doesn't support the default GPU skinning process with GLES2.
			If [code]false[/code], an alternative skinning process on the GPU is used in this case (slower in most cases).
			See also [member rendering/quality/skinning/force_software_skinning].
			[b]Note:[/b] When the software skinning fallback is triggered, custom vertex shaders will behave in a different way, because the bone transform will be already applied to the modelview matrix.
		</member>
		<member name="rendering/quality/spatial_partitioning/render_tree_balance" type="float" setter="" getter="" default="0.0">
			The rendering octree balance can be changed to favor smaller ([code]0[/code]), or larger ([code]1[/code]) branches.
			Larger branches can increase performance significantly in some projects.
		</member>
		<member name="rendering/quality/spatial_partitioning/use_bvh" type="bool" setter="" getter="" default="true">
			Enables the use of bounding volume hierarchy instead of octree for rendering spatial partitioning. This may give better performance.
		</member>
		<member name="rendering/quality/subsurface_scattering/follow_surface" type="bool" setter="" getter="" default="false">
			Improves quality of subsurface scattering, but cost significantly increases.
		</member>
		<member name="rendering/quality/subsurface_scattering/quality" type="int" setter="" getter="" default="1">
			Quality setting for subsurface scattering (samples taken).
		</member>
		<member name="rendering/quality/subsurface_scattering/scale" type="int" setter="" getter="" default="1.0">
			Max radius used for subsurface scattering samples.
		</member>
		<member name="rendering/quality/subsurface_scattering/weight_samples" type="bool" setter="" getter="" default="true">
			Weight subsurface scattering samples. Helps to avoid reading samples from unrelated parts of the screen.
		</member>
		<member name="rendering/quality/voxel_cone_tracing/high_quality" type="bool" setter="" getter="" default="false">
			Use high-quality voxel cone tracing. This results in better-looking reflections, but is much more expensive on the GPU.
		</member>
		<member name="rendering/threads/thread_model" type="int" setter="" getter="" default="1">
			Thread model for rendering. Rendering on a thread can vastly improve performance, but synchronizing to the main thread can cause a bit more jitter.
		</member>
		<member name="rendering/vram_compression/import_bptc" type="bool" setter="" getter="" default="false">
			If [code]true[/code], the texture importer will import VRAM-compressed textures using the BPTC algorithm. This texture compression algorithm is only supported on desktop platforms, and only when using the GLES3 renderer.
			[b]Note:[/b] Changing this setting does [i]not[/i] impact textures that were already imported before. To make this setting apply to textures that were already imported, exit the editor, remove the [code].import/[/code] folder located inside the project folder then restart the editor.
		</member>
		<member name="rendering/vram_compression/import_etc" type="bool" setter="" getter="" default="false">
			If [code]true[/code], the texture importer will import VRAM-compressed textures using the Ericsson Texture Compression algorithm. This algorithm doesn't support alpha channels in textures.
			[b]Note:[/b] Changing this setting does [i]not[/i] impact textures that were already imported before. To make this setting apply to textures that were already imported, exit the editor, remove the [code].import/[/code] folder located inside the project folder then restart the editor.
		</member>
		<member name="rendering/vram_compression/import_etc2" type="bool" setter="" getter="" default="true">
			If [code]true[/code], the texture importer will import VRAM-compressed textures using the Ericsson Texture Compression 2 algorithm. This texture compression algorithm is only supported when using the GLES3 renderer.
			[b]Note:[/b] Changing this setting does [i]not[/i] impact textures that were already imported before. To make this setting apply to textures that were already imported, exit the editor, remove the [code].import/[/code] folder located inside the project folder then restart the editor.
		</member>
		<member name="rendering/vram_compression/import_pvrtc" type="bool" setter="" getter="" default="false">
			If [code]true[/code], the texture importer will import VRAM-compressed textures using the PowerVR Texture Compression algorithm. This texture compression algorithm is only supported on iOS.
			[b]Note:[/b] Changing this setting does [i]not[/i] impact textures that were already imported before. To make this setting apply to textures that were already imported, exit the editor, remove the [code].import/[/code] folder located inside the project folder then restart the editor.
		</member>
		<member name="rendering/vram_compression/import_s3tc" type="bool" setter="" getter="" default="true">
			If [code]true[/code], the texture importer will import VRAM-compressed textures using the S3 Texture Compression algorithm. This algorithm is only supported on desktop platforms and consoles.
			[b]Note:[/b] Changing this setting does [i]not[/i] impact textures that were already imported before. To make this setting apply to textures that were already imported, exit the editor, remove the [code].import/[/code] folder located inside the project folder then restart the editor.
		</member>
		<member name="world/2d/cell_size" type="int" setter="" getter="" default="100">
			Cell size used for the 2D hash grid that [VisibilityNotifier2D] uses (in pixels).
		</member>
	</members>
	<constants>
	</constants>
</class>
