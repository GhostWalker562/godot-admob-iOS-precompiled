<?xml version="1.0" encoding="UTF-8" ?>
<class name="ScrollContainer" inherits="Container" version="3.3">
	<brief_description>
		A helper node for displaying scrollable elements such as lists.
	</brief_description>
	<description>
		A ScrollContainer node meant to contain a [Control] child. ScrollContainers will automatically create a scrollbar child ([HScrollBar], [VScrollBar], or both) when needed and will only draw the Control within the ScrollContainer area. Scrollbars will automatically be drawn at the right (for vertical) or bottom (for horizontal) and will enable dragging to move the viewable Control (and its children) within the ScrollContainer. Scrollbars will also automatically resize the grabber based on the [member Control.rect_min_size] of the Control relative to the ScrollContainer. Works great with a [Panel] control. You can set [code]EXPAND[/code] on the children's size flags, so they will upscale to the ScrollContainer's size if it's larger (scroll is invisible for the chosen dimension).
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_h_scrollbar">
			<return type="HScrollBar">
			</return>
			<description>
				Returns the horizontal scrollbar [HScrollBar] of this [ScrollContainer].
			</description>
		</method>
		<method name="get_v_scrollbar">
			<return type="VScrollBar">
			</return>
			<description>
				Returns the vertical scrollbar [VScrollBar] of this [ScrollContainer].
			</description>
		</method>
	</methods>
	<members>
		<member name="follow_focus" type="bool" setter="set_follow_focus" getter="is_following_focus" default="false">
			If [code]true[/code], the ScrollContainer will automatically scroll to focused children (including indirect children) to make sure they are fully visible.
		</member>
		<member name="rect_clip_content" type="bool" setter="set_clip_contents" getter="is_clipping_contents" override="true" default="true" />
		<member name="scroll_deadzone" type="int" setter="set_deadzone" getter="get_deadzone" default="0">
		</member>
		<member name="scroll_horizontal" type="int" setter="set_h_scroll" getter="get_h_scroll" default="0">
			The current horizontal scroll value.
		</member>
		<member name="scroll_horizontal_enabled" type="bool" setter="set_enable_h_scroll" getter="is_h_scroll_enabled" default="true">
			If [code]true[/code], enables horizontal scrolling.
		</member>
		<member name="scroll_vertical" type="int" setter="set_v_scroll" getter="get_v_scroll" default="0">
			The current vertical scroll value.
		</member>
		<member name="scroll_vertical_enabled" type="bool" setter="set_enable_v_scroll" getter="is_v_scroll_enabled" default="true">
			If [code]true[/code], enables vertical scrolling.
		</member>
	</members>
	<signals>
		<signal name="scroll_ended">
			<description>
				Emitted when scrolling stops.
			</description>
		</signal>
		<signal name="scroll_started">
			<description>
				Emitted when scrolling is started.
			</description>
		</signal>
	</signals>
	<constants>
	</constants>
	<theme_items>
		<theme_item name="bg" type="StyleBox">
			The background [StyleBox] of the [ScrollContainer].
		</theme_item>
	</theme_items>
</class>
