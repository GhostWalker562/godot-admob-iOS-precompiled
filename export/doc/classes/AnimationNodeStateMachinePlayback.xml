<?xml version="1.0" encoding="UTF-8" ?>
<class name="AnimationNodeStateMachinePlayback" inherits="Resource" version="3.3">
	<brief_description>
		Playback control for [AnimationNodeStateMachine].
	</brief_description>
	<description>
		Allows control of [AnimationTree] state machines created with [AnimationNodeStateMachine]. Retrieve with [code]$AnimationTree.get("parameters/playback")[/code].
		[b]Example:[/b]
		[codeblock]
		var state_machine = $AnimationTree.get("parameters/playback")
		state_machine.travel("some_state")
		[/codeblock]
	</description>
	<tutorials>
		<link>https://docs.godotengine.org/en/3.3/tutorials/animation/animation_tree.html</link>
	</tutorials>
	<methods>
		<method name="get_current_length" qualifiers="const">
			<return type="float">
			</return>
			<description>
			</description>
		</method>
		<method name="get_current_node" qualifiers="const">
			<return type="String">
			</return>
			<description>
				Returns the currently playing animation state.
			</description>
		</method>
		<method name="get_current_play_position" qualifiers="const">
			<return type="float">
			</return>
			<description>
				Returns the playback position within the current animation state.
			</description>
		</method>
		<method name="get_travel_path" qualifiers="const">
			<return type="PoolStringArray">
			</return>
			<description>
				Returns the current travel path as computed internally by the A* algorithm.
			</description>
		</method>
		<method name="is_playing" qualifiers="const">
			<return type="bool">
			</return>
			<description>
				Returns [code]true[/code] if an animation is playing.
			</description>
		</method>
		<method name="start">
			<return type="void">
			</return>
			<argument index="0" name="node" type="String">
			</argument>
			<description>
				Starts playing the given animation.
			</description>
		</method>
		<method name="stop">
			<return type="void">
			</return>
			<description>
				Stops the currently playing animation.
			</description>
		</method>
		<method name="travel">
			<return type="void">
			</return>
			<argument index="0" name="to_node" type="String">
			</argument>
			<description>
				Transitions from the current state to another one, following the shortest path.
			</description>
		</method>
	</methods>
	<members>
		<member name="resource_local_to_scene" type="bool" setter="set_local_to_scene" getter="is_local_to_scene" override="true" default="true" />
	</members>
	<constants>
	</constants>
</class>
