<?xml version="1.0" encoding="UTF-8" ?>
<class name="ItemList" inherits="Control" version="3.3">
	<brief_description>
		Control that provides a list of selectable items (and/or icons) in a single column, or optionally in multiple columns.
	</brief_description>
	<description>
		This control provides a selectable list of items that may be in a single (or multiple columns) with option of text, icons, or both text and icon. Tooltips are supported and may be different for every item in the list.
		Selectable items in the list may be selected or deselected and multiple selection may be enabled. Selection with right mouse button may also be enabled to allow use of popup context menus. Items may also be "activated" by double-clicking them or by pressing Enter.
		Item text only supports single-line strings, newline characters (e.g. [code]\n[/code]) in the string won't produce a newline. Text wrapping is enabled in [constant ICON_MODE_TOP] mode, but column's width is adjusted to fully fit its content by default. You need to set [member fixed_column_width] greater than zero to wrap the text.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="add_icon_item">
			<return type="void">
			</return>
			<argument index="0" name="icon" type="Texture">
			</argument>
			<argument index="1" name="selectable" type="bool" default="true">
			</argument>
			<description>
				Adds an item to the item list with no text, only an icon.
			</description>
		</method>
		<method name="add_item">
			<return type="void">
			</return>
			<argument index="0" name="text" type="String">
			</argument>
			<argument index="1" name="icon" type="Texture" default="null">
			</argument>
			<argument index="2" name="selectable" type="bool" default="true">
			</argument>
			<description>
				Adds an item to the item list with specified text. Specify an [code]icon[/code], or use [code]null[/code] as the [code]icon[/code] for a list item with no icon.
				If selectable is [code]true[/code], the list item will be selectable.
			</description>
		</method>
		<method name="clear">
			<return type="void">
			</return>
			<description>
				Removes all items from the list.
			</description>
		</method>
		<method name="ensure_current_is_visible">
			<return type="void">
			</return>
			<description>
				Ensure current selection is visible, adjusting the scroll position as necessary.
			</description>
		</method>
		<method name="get_item_at_position" qualifiers="const">
			<return type="int">
			</return>
			<argument index="0" name="position" type="Vector2">
			</argument>
			<argument index="1" name="exact" type="bool" default="false">
			</argument>
			<description>
				Returns the item index at the given [code]position[/code].
				When there is no item at that point, -1 will be returned if [code]exact[/code] is [code]true[/code], and the closest item index will be returned otherwise.
			</description>
		</method>
		<method name="get_item_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
				Returns the number of items currently in the list.
			</description>
		</method>
		<method name="get_item_custom_bg_color" qualifiers="const">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the custom background color of the item specified by [code]idx[/code] index.
			</description>
		</method>
		<method name="get_item_custom_fg_color" qualifiers="const">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the custom foreground color of the item specified by [code]idx[/code] index.
			</description>
		</method>
		<method name="get_item_icon" qualifiers="const">
			<return type="Texture">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the icon associated with the specified index.
			</description>
		</method>
		<method name="get_item_icon_modulate" qualifiers="const">
			<return type="Color">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns a [Color] modulating item's icon at the specified index.
			</description>
		</method>
		<method name="get_item_icon_region" qualifiers="const">
			<return type="Rect2">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the region of item's icon used. The whole icon will be used if the region has no area.
			</description>
		</method>
		<method name="get_item_metadata" qualifiers="const">
			<return type="Variant">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the metadata value of the specified index.
			</description>
		</method>
		<method name="get_item_text" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the text associated with the specified index.
			</description>
		</method>
		<method name="get_item_tooltip" qualifiers="const">
			<return type="String">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns the tooltip hint associated with the specified index.
			</description>
		</method>
		<method name="get_selected_items">
			<return type="PoolIntArray">
			</return>
			<description>
				Returns an array with the indexes of the selected items.
			</description>
		</method>
		<method name="get_v_scroll">
			<return type="VScrollBar">
			</return>
			<description>
				Returns the [Object] ID associated with the list.
			</description>
		</method>
		<method name="is_anything_selected">
			<return type="bool">
			</return>
			<description>
				Returns [code]true[/code] if one or more items are selected.
			</description>
		</method>
		<method name="is_item_disabled" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if the item at the specified index is disabled.
			</description>
		</method>
		<method name="is_item_icon_transposed" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if the item icon will be drawn transposed, i.e. the X and Y axes are swapped.
			</description>
		</method>
		<method name="is_item_selectable" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if the item at the specified index is selectable.
			</description>
		</method>
		<method name="is_item_tooltip_enabled" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if the tooltip is enabled for specified item index.
			</description>
		</method>
		<method name="is_selected" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Returns [code]true[/code] if the item at the specified index is currently selected.
			</description>
		</method>
		<method name="move_item">
			<return type="void">
			</return>
			<argument index="0" name="from_idx" type="int">
			</argument>
			<argument index="1" name="to_idx" type="int">
			</argument>
			<description>
				Moves item from index [code]from_idx[/code] to [code]to_idx[/code].
			</description>
		</method>
		<method name="remove_item">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Removes the item specified by [code]idx[/code] index from the list.
			</description>
		</method>
		<method name="select">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="single" type="bool" default="true">
			</argument>
			<description>
				Select the item at the specified index.
				[b]Note:[/b] This method does not trigger the item selection signal.
			</description>
		</method>
		<method name="set_item_custom_bg_color">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="custom_bg_color" type="Color">
			</argument>
			<description>
				Sets the background color of the item specified by [code]idx[/code] index to the specified [Color].
			</description>
		</method>
		<method name="set_item_custom_fg_color">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="custom_fg_color" type="Color">
			</argument>
			<description>
				Sets the foreground color of the item specified by [code]idx[/code] index to the specified [Color].
			</description>
		</method>
		<method name="set_item_disabled">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="disabled" type="bool">
			</argument>
			<description>
				Disables (or enables) the item at the specified index.
				Disabled items cannot be selected and do not trigger activation signals (when double-clicking or pressing Enter).
			</description>
		</method>
		<method name="set_item_icon">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="icon" type="Texture">
			</argument>
			<description>
				Sets (or replaces) the icon's [Texture] associated with the specified index.
			</description>
		</method>
		<method name="set_item_icon_modulate">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="modulate" type="Color">
			</argument>
			<description>
				Sets a modulating [Color] of the item associated with the specified index.
			</description>
		</method>
		<method name="set_item_icon_region">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="rect" type="Rect2">
			</argument>
			<description>
				Sets the region of item's icon used. The whole icon will be used if the region has no area.
			</description>
		</method>
		<method name="set_item_icon_transposed">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="transposed" type="bool">
			</argument>
			<description>
				Sets whether the item icon will be drawn transposed.
			</description>
		</method>
		<method name="set_item_metadata">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="metadata" type="Variant">
			</argument>
			<description>
				Sets a value (of any type) to be stored with the item associated with the specified index.
			</description>
		</method>
		<method name="set_item_selectable">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="selectable" type="bool">
			</argument>
			<description>
				Allows or disallows selection of the item associated with the specified index.
			</description>
		</method>
		<method name="set_item_text">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="text" type="String">
			</argument>
			<description>
				Sets text of the item associated with the specified index.
			</description>
		</method>
		<method name="set_item_tooltip">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="tooltip" type="String">
			</argument>
			<description>
				Sets the tooltip hint for the item associated with the specified index.
			</description>
		</method>
		<method name="set_item_tooltip_enabled">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<argument index="1" name="enable" type="bool">
			</argument>
			<description>
				Sets whether the tooltip hint is enabled for specified item index.
			</description>
		</method>
		<method name="sort_items_by_text">
			<return type="void">
			</return>
			<description>
				Sorts items in the list by their text.
			</description>
		</method>
		<method name="unselect">
			<return type="void">
			</return>
			<argument index="0" name="idx" type="int">
			</argument>
			<description>
				Ensures the item associated with the specified index is not selected.
			</description>
		</method>
		<method name="unselect_all">
			<return type="void">
			</return>
			<description>
				Ensures there are no items selected.
			</description>
		</method>
	</methods>
	<members>
		<member name="allow_reselect" type="bool" setter="set_allow_reselect" getter="get_allow_reselect" default="false">
			If [code]true[/code], the currently selected item can be selected again.
		</member>
		<member name="allow_rmb_select" type="bool" setter="set_allow_rmb_select" getter="get_allow_rmb_select" default="false">
			If [code]true[/code], right mouse button click can select items.
		</member>
		<member name="auto_height" type="bool" setter="set_auto_height" getter="has_auto_height" default="false">
			If [code]true[/code], the control will automatically resize the height to fit its content.
		</member>
		<member name="fixed_column_width" type="int" setter="set_fixed_column_width" getter="get_fixed_column_width" default="0">
			The width all columns will be adjusted to.
			A value of zero disables the adjustment, each item will have a width equal to the width of its content and the columns will have an uneven width.
		</member>
		<member name="fixed_icon_size" type="Vector2" setter="set_fixed_icon_size" getter="get_fixed_icon_size" default="Vector2( 0, 0 )">
			The size all icons will be adjusted to.
			If either X or Y component is not greater than zero, icon size won't be affected.
		</member>
		<member name="focus_mode" type="int" setter="set_focus_mode" getter="get_focus_mode" override="true" enum="Control.FocusMode" default="2" />
		<member name="icon_mode" type="int" setter="set_icon_mode" getter="get_icon_mode" enum="ItemList.IconMode" default="1">
			The icon position, whether above or to the left of the text. See the [enum IconMode] constants.
		</member>
		<member name="icon_scale" type="float" setter="set_icon_scale" getter="get_icon_scale" default="1.0">
			The scale of icon applied after [member fixed_icon_size] and transposing takes effect.
		</member>
		<member name="max_columns" type="int" setter="set_max_columns" getter="get_max_columns" default="1">
			Maximum columns the list will have.
			If greater than zero, the content will be split among the specified columns.
			A value of zero means unlimited columns, i.e. all items will be put in the same row.
		</member>
		<member name="max_text_lines" type="int" setter="set_max_text_lines" getter="get_max_text_lines" default="1">
			Maximum lines of text allowed in each item. Space will be reserved even when there is not enough lines of text to display.
			[b]Note:[/b] This property takes effect only when [member icon_mode] is [constant ICON_MODE_TOP]. To make the text wrap, [member fixed_column_width] should be greater than zero.
		</member>
		<member name="rect_clip_content" type="bool" setter="set_clip_contents" getter="is_clipping_contents" override="true" default="true" />
		<member name="same_column_width" type="bool" setter="set_same_column_width" getter="is_same_column_width" default="false">
			Whether all columns will have the same width.
			If [code]true[/code], the width is equal to the largest column width of all columns.
		</member>
		<member name="select_mode" type="int" setter="set_select_mode" getter="get_select_mode" enum="ItemList.SelectMode" default="0">
			Allows single or multiple item selection. See the [enum SelectMode] constants.
		</member>
	</members>
	<signals>
		<signal name="item_activated">
			<argument index="0" name="index" type="int">
			</argument>
			<description>
				Triggered when specified list item is activated via double-clicking or by pressing Enter.
			</description>
		</signal>
		<signal name="item_rmb_selected">
			<argument index="0" name="index" type="int">
			</argument>
			<argument index="1" name="at_position" type="Vector2">
			</argument>
			<description>
				Triggered when specified list item has been selected via right mouse clicking.
				The click position is also provided to allow appropriate popup of context menus at the correct location.
				[member allow_rmb_select] must be enabled.
			</description>
		</signal>
		<signal name="item_selected">
			<argument index="0" name="index" type="int">
			</argument>
			<description>
				Triggered when specified item has been selected.
				[member allow_reselect] must be enabled to reselect an item.
			</description>
		</signal>
		<signal name="multi_selected">
			<argument index="0" name="index" type="int">
			</argument>
			<argument index="1" name="selected" type="bool">
			</argument>
			<description>
				Triggered when a multiple selection is altered on a list allowing multiple selection.
			</description>
		</signal>
		<signal name="nothing_selected">
			<description>
				Triggered when a left mouse click is issued within the rect of the list but on empty space.
			</description>
		</signal>
		<signal name="rmb_clicked">
			<argument index="0" name="at_position" type="Vector2">
			</argument>
			<description>
				Triggered when a right mouse click is issued within the rect of the list but on empty space.
				[member allow_rmb_select] must be enabled.
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="ICON_MODE_TOP" value="0" enum="IconMode">
			Icon is drawn above the text.
		</constant>
		<constant name="ICON_MODE_LEFT" value="1" enum="IconMode">
			Icon is drawn to the left of the text.
		</constant>
		<constant name="SELECT_SINGLE" value="0" enum="SelectMode">
			Only allow selecting a single item.
		</constant>
		<constant name="SELECT_MULTI" value="1" enum="SelectMode">
			Allows selecting multiple items by holding Ctrl or Shift.
		</constant>
	</constants>
	<theme_items>
		<theme_item name="bg" type="StyleBox">
			Default [StyleBox] for the [ItemList], i.e. used when the control is not being focused.
		</theme_item>
		<theme_item name="bg_focus" type="StyleBox">
			[StyleBox] used when the [ItemList] is being focused.
		</theme_item>
		<theme_item name="cursor" type="StyleBox">
			[StyleBox] used for the cursor, when the [ItemList] is being focused.
		</theme_item>
		<theme_item name="cursor_unfocused" type="StyleBox">
			[StyleBox] used for the cursor, when the [ItemList] is not being focused.
		</theme_item>
		<theme_item name="font" type="Font">
			[Font] of the item's text.
		</theme_item>
		<theme_item name="font_color" type="Color" default="Color( 0.63, 0.63, 0.63, 1 )">
			Default text [Color] of the item.
		</theme_item>
		<theme_item name="font_color_selected" type="Color" default="Color( 1, 1, 1, 1 )">
			Text [Color] used when the item is selected.
		</theme_item>
		<theme_item name="guide_color" type="Color" default="Color( 0, 0, 0, 0.1 )">
			[Color] of the guideline. The guideline is a line drawn between each row of items.
		</theme_item>
		<theme_item name="hseparation" type="int" default="4">
			The horizontal spacing between items.
		</theme_item>
		<theme_item name="icon_margin" type="int" default="4">
			The spacing between item's icon and text.
		</theme_item>
		<theme_item name="line_separation" type="int" default="2">
			The vertical spacing between each line of text.
		</theme_item>
		<theme_item name="selected" type="StyleBox">
			[StyleBox] for the selected items, used when the [ItemList] is not being focused.
		</theme_item>
		<theme_item name="selected_focus" type="StyleBox">
			[StyleBox] for the selected items, used when the [ItemList] is being focused.
		</theme_item>
		<theme_item name="vseparation" type="int" default="2">
			The vertical spacing between items.
		</theme_item>
	</theme_items>
</class>
